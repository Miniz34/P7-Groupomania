{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeaderMainPage = _resolveComponent(\"HeaderMainPage\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_HeaderMainPage), _createElementVNode(\"div\", null, [_createElementVNode(\"h2\", null, _toDisplayString(_ctx.$route.params.id), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, _toDisplayString(_ctx.MainPost), 1\n  /* TEXT */\n  )])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;6DACEA,aAAkBC,yBAAlB,GAEAC,oBAUM,KAVN,EAUM,IAVN,EAUM,CATJA,oBAIK,IAJL,EAIK,IAJL,EAIKC,iBAFAC,YAAOC,MAAP,CAAcC,EAEd,CAJL,EAEqB;EAAA;EAFrB,CASI,EAHJJ,oBAAqB,GAArB,EAAqB,IAArB,EAAqBC,iBAAfC,aAAe,CAArB,EAAc;EAAA;EAAd,CAGI,CAVN","names":["_createVNode","_component_HeaderMainPage","_createElementVNode","_toDisplayString","_ctx","params","id"],"sourceRoot":"","sources":["D:\\Code\\Projet 7\\p7-groupomania\\P7-Groupomania\\frontend\\src\\views\\PublicationSingleView.vue"],"sourcesContent":["<template>\r\n  <HeaderMainPage />\r\n\r\n  <div>\r\n    <h2>\r\n\r\n      {{ $route.params.id }}\r\n\r\n    </h2>\r\n\r\n    <p>{{ MainPost }}</p>\r\n\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport HeaderMainPage from \"@/components/HeaderMainPage.vue\"\r\n\r\nexport default {\r\n  components: {\r\n    HeaderMainPage\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      publications: \"\"\r\n    }\r\n  },\r\n  computed: {\r\n    publicationId() {\r\n      return parseInt(this.$route.params.id)\r\n    }\r\n\r\n  },\r\n\r\n  async created() {\r\n    fetch(`http://localhost:3000/api/publications/`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        const postId = this.$route.params.id;\r\n        console.log(postId)\r\n        this.publication = data\r\n        console.table(data)\r\n\r\n        const MainPost = data.find(post => post.id == postId)\r\n        console.log(MainPost)\r\n      })\r\n\r\n  }\r\n\r\n}\r\n\r\n</script>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PublicationSingle = _resolveComponent(\"PublicationSingle\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.PostData, post => {\n    return _openBlock(), _createBlock(_component_PublicationSingle, {\n      key: post,\n      title: post.title\n    }, null, 8\n    /* PROPS */\n    , [\"title\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createElementVNode(\"p\", null, _toDisplayString($data.PostData.title), 1\n  /* TEXT */\n  )], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;gFAGEA,oBAA8EC,SAA9E,EAA8E,IAA9E,EAA8EC,YAA5CC,cAA4C,EAApDC,IAAgB,IAAZ;yBAA9BC,aAA8EC,4BAA9E,EAA8E;MAAjCC,GAAG,EAAEH,IAA4B;MAArBI,KAAK,EAAEJ,IAAI,CAACI;IAAS,CAA9E;;IAAA;GAA8E,CAA9E;;EAAA,IAGAC,oBAA2B,GAA3B,EAA2B,IAA3B,EAA2BC,iBAArBP,eAASK,KAAY,CAA3B,EAAoB;EAAA;EAApB","names":["_createElementBlock","_Fragment","_renderList","$data","post","_createBlock","_component_PublicationSingle","key","title","_createElementVNode","_toDisplayString"],"sourceRoot":"","sources":["D:\\Code\\Projet 7\\p7-groupomania\\P7-Groupomania\\frontend\\src\\views\\PublicationSingleView.vue"],"sourcesContent":["<template>\r\n\r\n\r\n  <PublicationSingle v-for=\"post in PostData\" :key=\"post\" :title=\"post.title\" />\r\n\r\n\r\n  <p>{{ PostData.title }}</p>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\n\r\nimport PublicationSingle from '../components/PublicationSingleTemplate'\r\n\r\nexport default {\r\n  components: {\r\n    PublicationSingle\r\n  },\r\n  data() {\r\n    return {\r\n      PostData: {\r\n        title: \"\",\r\n        content: \"\",\r\n        createdAt: \"\"\r\n      }\r\n\r\n    };\r\n  },\r\n  created() {\r\n    // http://localhost:3000/api/publications/all\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n      }\r\n    }\r\n    fetch(\"http://localhost:3000/api/publications/2\", options)\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        this.PostData = data\r\n        console.table(data);\r\n      })\r\n  }\r\n}\r\n\r\n\r\n\r\n</script>"]},"metadata":{},"sourceType":"module"}
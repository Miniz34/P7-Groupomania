{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeaderMainPage = _resolveComponent(\"HeaderMainPage\");\n\n  const _component_PublicationSingleTemplate = _resolveComponent(\"PublicationSingleTemplate\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_HeaderMainPage), _createVNode(_component_PublicationSingleTemplate), _createCommentVNode(\" <div class=\\\"Publications-View\\\" id=\\\"Publications-View\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"well \\\">\\r\\n        <div class=\\\"media\\\">\\r\\n        \\r\\n          <div class=\\\"media-body\\\">\\r\\n            <h4 class=\\\"media-heading\\\"></h4>\\r\\n            <p class=\\\"text-right fw-bold fs-3\\\"> {{ publications.title }}</p>\\r\\n            <div class=\\\"card-img-top w-50 mx-auto\\\" v-if=\\\"publications.image\\\">\\r\\n              <img :src=\\\"publications.image\\\" alt=\\\"...\\\" class=\\\"w-100\\\" />\\r\\n            </div>\\r\\n            <p>{{ publications.content }}</p>\\r\\n            <ul class=\\\"list-inline list-unstyled main-post\\\">\\r\\n              <li><span><i class=\\\"glyphicon glyphicon-calendar\\\"></i> </span></li>\\r\\n\\r\\n              \\r\\n              <p>Publié par {{ publications.user.username }} le {{ new\\r\\n                  Date(publications.createdAt).toLocaleString(\\\"fr-FR\\\", { timeZone: \\\"UTC\\\" })\\r\\n              }}</p>\\r\\n\\r\\n            </ul>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"well container\\\">\\r\\n      <h4><i class=\\\"fa fa-paper-plane-o\\\"></i> Leave a Comment:</h4>\\r\\n      <form role=\\\"form\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <textarea v-model=\\\"comment\\\" class=\\\"form-control\\\" rows=\\\"3\\\"></textarea>\\r\\n        </div>\\r\\n        <button v-on:click.prevent=\\\"SendComment\\\" type=\\\"submit\\\" value=\\\"\\\" class=\\\"btn btn-primary\\\"><i\\r\\n            class=\\\"fa fa-reply\\\"></i>\\r\\n          Submit</button>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n    <div v-for=\\\"comment in publications.comments\\\" :key=\\\"comment.id\\\" class=\\\"container\\\">\\r\\n      <h5><i class=\\\"commentaire\\\"></i>Commentaire de {{ comment.user.username }}\\r\\n        <small>{{ new Date(comment.createdAt).toLocaleString(\\\"fr-FR\\\", { timeZone: \\\"UTC\\\" })\\r\\n        }}</small>\\r\\n      </h5>\\r\\n      <p>{{ comment.commentaire }}</p>\\r\\n    </div>\\r\\n\\r\\n  </div> \")], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;;6DACEA,aAAkBC,yBAAlB,GAEAD,aAA6BE,oCAA7B,GAEAC","names":["_createVNode","_component_HeaderMainPage","_component_PublicationSingleTemplate","_createCommentVNode"],"sourceRoot":"","sources":["D:\\Code\\Projet 7\\p7-groupomania\\P7-Groupomania\\frontend\\src\\views\\PublicationSingleView.vue"],"sourcesContent":["<template>\r\n  <HeaderMainPage />\r\n\r\n  <PublicationSingleTemplate />\r\n\r\n  <!-- <div class=\"Publications-View\" id=\"Publications-View\">\r\n    <div class=\"container\">\r\n      <div class=\"well \">\r\n        <div class=\"media\">\r\n        \r\n          <div class=\"media-body\">\r\n            <h4 class=\"media-heading\"></h4>\r\n            <p class=\"text-right fw-bold fs-3\"> {{ publications.title }}</p>\r\n            <div class=\"card-img-top w-50 mx-auto\" v-if=\"publications.image\">\r\n              <img :src=\"publications.image\" alt=\"...\" class=\"w-100\" />\r\n            </div>\r\n            <p>{{ publications.content }}</p>\r\n            <ul class=\"list-inline list-unstyled main-post\">\r\n              <li><span><i class=\"glyphicon glyphicon-calendar\"></i> </span></li>\r\n\r\n              \r\n              <p>Publié par {{ publications.user.username }} le {{ new\r\n                  Date(publications.createdAt).toLocaleString(\"fr-FR\", { timeZone: \"UTC\" })\r\n              }}</p>\r\n\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"well container\">\r\n      <h4><i class=\"fa fa-paper-plane-o\"></i> Leave a Comment:</h4>\r\n      <form role=\"form\">\r\n        <div class=\"form-group\">\r\n          <textarea v-model=\"comment\" class=\"form-control\" rows=\"3\"></textarea>\r\n        </div>\r\n        <button v-on:click.prevent=\"SendComment\" type=\"submit\" value=\"\" class=\"btn btn-primary\"><i\r\n            class=\"fa fa-reply\"></i>\r\n          Submit</button>\r\n      </form>\r\n    </div>\r\n\r\n    <div v-for=\"comment in publications.comments\" :key=\"comment.id\" class=\"container\">\r\n      <h5><i class=\"commentaire\"></i>Commentaire de {{ comment.user.username }}\r\n        <small>{{ new Date(comment.createdAt).toLocaleString(\"fr-FR\", { timeZone: \"UTC\" })\r\n        }}</small>\r\n      </h5>\r\n      <p>{{ comment.commentaire }}</p>\r\n    </div>\r\n\r\n  </div> -->\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n// import moment from 'moment'\r\n\r\nimport PublicationSingleTemplate from \"@/components/PublicationSingleTemplate.vue\"\r\nimport HeaderMainPage from \"@/components/HeaderMainPage.vue\"\r\nconst id = sessionStorage.getItem(\"userId\")\r\n\r\n\r\n// const moment = require('moment');\r\n// moment.locale('fr')\r\nexport default {\r\n  components: {\r\n    HeaderMainPage,\r\n    PublicationSingleTemplate\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      publications: \"\",\r\n      comment: \"\",\r\n      image: \"\"\r\n    }\r\n  },\r\n  // computed: {\r\n  //   publicationId() {\r\n  //     return parseInt(this.$route.params.id)\r\n  //   },\r\n\r\n\r\n\r\n  // },\r\n\r\n  async created() {\r\n    const postId = this.$route.params.id;\r\n    fetch(`http://localhost:3000/api/publications/` + postId)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        this.publications = data\r\n        // const test = this.publications.user.username\r\n        // console.log(test)\r\n\r\n\r\n\r\n      })\r\n\r\n  },\r\n\r\n  methods: {\r\n    SendComment() {\r\n      // const moment = require('moment');\r\n      // const aujourdhui = moment();\r\n      console.log(\"hello\")\r\n      fetch('http://localhost:3000/api/comments/', {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          // 'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n        },\r\n        body: JSON.stringify({\r\n          publicationId: this.publications.id,\r\n          commentaire: this.comment,\r\n          userId: id\r\n        })\r\n      }).then(\r\n        alert(\"votre commentaire a été publié\"))\r\n      location.reload()\r\n      const test = this.publications.id\r\n      console.log(test)\r\n        .catch((error) => {\r\n          console.log(error + \"message d'erreur filler\")\r\n        })\r\n\r\n\r\n\r\n    }\r\n  },\r\n  // computed: {\r\n  //   createdAt: function () {\r\n\r\n  //     const testdate = this.publications.createdAt\r\n  //     return moment(testdate).format('Do MMM YYYY - LTS')\r\n\r\n  //   },\r\n  //   commentCreatedAt: function () {\r\n\r\n  //     const testdate = this.publications.comments[0].createdAt\r\n  //     console.log(testdate)\r\n  //     return moment(testdate).format('Do MMM YYYY - LTS')\r\n\r\n  //     // new Date(post.createdAt).toLocaleString(\"fr-FR\", { timeZone: \"UTC\" })\r\n\r\n  //   }\r\n\r\n  // },\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.date {\r\n  margin-left: 25px\r\n}\r\n\r\n.comment {\r\n  margin-bottom: 20px\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
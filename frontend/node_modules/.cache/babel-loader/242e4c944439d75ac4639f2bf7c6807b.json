{"ast":null,"code":"// import axios from 'axios';\n// import { json } from 'body-parser';\nconst userId = sessionStorage.getItem(\"userId\");\nexport default {\n  name: \"newPost\",\n\n  data() {\n    return {\n      publication: {}\n    };\n  },\n\n  created() {\n    const postId = this.$route.params.id;\n    console.log(postId);\n    fetch(`http://localhost:3000/api/publications/` + postId, {\n      method: \"GET\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      this.publication = data;\n      this.firstname = this.publication.user.firstname;\n      this.lastname = this.publication.user.lastname; // console.log(this.publications)\n    });\n  },\n\n  methods: {\n    modifyPost() {\n      let postId = this.$route.params.id;\n      let input = document.getElementById('inputFile');\n      const fd = new FormData();\n      fd.append(\"title\", this.publication.title);\n      fd.append(\"content\", this.publication.content);\n      fd.append(\"inputFile\", input.files[0]);\n      fd.append(\"userId\", userId);\n      console.log(\"test récup\", fd.get(\"title\"));\n      console.log(\"test récup\", fd.get(\"content\"));\n      console.log(\"test récup\", fd.get(\"inputFile\"));\n      console.log(\"test récup\", fd.get(\"userId\"));\n\n      if (this.publication.title && this.publication.content) {\n        const options = {\n          method: \"PUT\",\n          body: fd,\n          headers: {\n            // 'Accept': 'application/json',\n            // 'Content-Type': 'application/json',\n            'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\n          }\n        };\n        fetch(\"http://localhost:3000/api/publications/\" + postId, options).then(() => {\n          alert('Post modifié'); // document.location.href = `http://localhost:8080/publications`\n        }).catch(err => console.log(err));\n      }\n    },\n\n    onFileChange(e) {\n      console.log(e);\n      this.publication.image = e.target.files[0] || e.dataTransfer.files;\n      console.log(this.publication.image);\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["userId","sessionStorage","getItem","name","data","publication","created","postId","$route","params","id","console","log","fetch","method","headers","then","response","json","firstname","user","lastname","methods","modifyPost","input","document","getElementById","fd","FormData","append","title","content","files","get","options","body","alert","catch","err","onFileChange","e","image","target","dataTransfer"],"sourceRoot":"","sources":["D:\\Code\\Projet 7\\p7-groupomania\\P7-Groupomania\\frontend\\src\\components\\PostModifyTemplate.vue"],"sourcesContent":["<template>\r\n\r\n\r\n  <form id=\"Auth-View\" enctype=\"multipart/form-data\" method=\"post\">\r\n\r\n    <div class=\"container col align-self-center\">\r\n      <div class=\"row\" id=\"row_style\">\r\n        <h4 class=\"text-center\">Modifier post</h4>\r\n        <div class=\"col-md-4   col-md-offset-4\">\r\n          <div class=\"form-group\">\r\n            <input v-model=\"publication.title\" type=\"text\" class=\"form-control\" placeholder=\"Title\">\r\n          </div>\r\n          <textarea v-model=\"publication.content\" id=\"editor\" cols=\"30\"\r\n            rows=\"10\">Submit your text post here...</textarea>\r\n          <br>\r\n          <div class=\"form-group\">\r\n            <button @click.prevent=\"modifyPost\" class=\"btn btn-primary\" id=\"submit\">Modifier post</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"custom-file\">\r\n        <input type=\"file\" name=\"inputFile\" class=\"custom-file-input\" id=\"inputFile\" aria-describedby=\"inputFileAddon\"\r\n          @change=\"onFileChange\" />\r\n        <label class=\"custom-file-label\" for=\"inputFile\"> Modifier image (à refaire)</label>\r\n      </div>\r\n      <div class=\"thumbnail\">\r\n        <img v-if=\"publication.image\" :src=\"publication.image\" />\r\n      </div>\r\n      <div class=\"zaeaze\">\r\n        <img :src=\"this.publication.image\" />\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n\r\n// import axios from 'axios';\r\n// import { json } from 'body-parser';\r\nconst userId = sessionStorage.getItem(\"userId\")\r\n\r\nexport default {\r\n  name: \"newPost\",\r\n  data() {\r\n    return {\r\n      publication: {}\r\n    }\r\n  },\r\n  created() {\r\n    const postId = this.$route.params.id;\r\n    console.log(postId);\r\n    fetch(`http://localhost:3000/api/publications/` + postId, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n      },\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        this.publication = data\r\n        this.firstname = this.publication.user.firstname\r\n        this.lastname = this.publication.user.lastname\r\n\r\n        // console.log(this.publications)\r\n\r\n\r\n\r\n      })\r\n  },\r\n\r\n  methods: {\r\n\r\n    modifyPost() {\r\n      let postId = this.$route.params.id\r\n\r\n      let input = document.getElementById('inputFile')\r\n      const fd = new FormData();\r\n      fd.append(\"title\", this.publication.title);\r\n      fd.append(\"content\", this.publication.content);\r\n      fd.append(\"inputFile\", input.files[0]);\r\n      fd.append(\"userId\", userId);\r\n\r\n      console.log(\"test récup\", fd.get(\"title\"));\r\n      console.log(\"test récup\", fd.get(\"content\"));\r\n      console.log(\"test récup\", fd.get(\"inputFile\"));\r\n      console.log(\"test récup\", fd.get(\"userId\"));\r\n      if (this.publication.title && this.publication.content) {\r\n\r\n\r\n        const options = {\r\n          method: \"PUT\",\r\n          body: fd,\r\n          headers: {\r\n            // 'Accept': 'application/json',\r\n            // 'Content-Type': 'application/json',\r\n            'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n          }\r\n\r\n        }\r\n        fetch(\"http://localhost:3000/api/publications/\" + postId, options)\r\n\r\n\r\n\r\n          .then(() => {\r\n            alert('Post modifié')\r\n            // document.location.href = `http://localhost:8080/publications`\r\n          }).catch((err) => console.log(err))\r\n      }\r\n    },\r\n    onFileChange(e) {\r\n      console.log(e);\r\n      this.publication.image = e.target.files[0] || e.dataTransfer.files;\r\n      console.log(this.publication.image);\r\n\r\n    },\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\nimg {\r\n  margin-top: 25px;\r\n  margin-bottom: 25px;\r\n  width: 100px;\r\n  height: 100px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
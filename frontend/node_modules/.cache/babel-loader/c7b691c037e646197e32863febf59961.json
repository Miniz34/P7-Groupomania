{"ast":null,"code":"// import axios from 'axios';\n// import { json } from 'body-parser';\nconst userId = sessionStorage.getItem(\"userId\");\nexport default {\n  name: \"newPost\",\n\n  data() {\n    return {\n      dataPost: {\n        title: \"\",\n        content: \"\",\n        comment: \"\"\n      }\n    };\n  },\n\n  created() {\n    const postId = this.$route.params.id;\n    console.log(postId);\n    fetch(`http://localhost:3000/api/publications/` + postId, {\n      method: \"GET\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      this.publication = data;\n      this.firstname = this.publication.user.firstname;\n      this.lastname = this.publication.user.lastname; // console.log(this.publications)\n    });\n  },\n\n  methods: {\n    mounted() {\n      let postId = this.$route.params.id;\n      let input = document.getElementById('inputFile');\n      const fd = new FormData();\n      fd.append(\"title\", this.dataPost.title);\n      fd.append(\"content\", this.dataPost.content);\n      fd.append(\"inputFile\", input.files[0]);\n      fd.append(\"userId\", userId);\n      console.log(\"test récup\", fd.get(\"title\"));\n      console.log(\"test récup\", fd.get(\"content\"));\n      console.log(\"test récup\", fd.get(\"inputFile\"));\n      console.log(\"test récup\", fd.get(\"userId\"));\n\n      if (this.dataPost.title && this.dataPost.content) {\n        const options = {\n          method: \"PUT\",\n          body: fd,\n          headers: {\n            // 'Accept': 'application/json',\n            // 'Content-Type': 'application/json',\n            'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\n          }\n        };\n        fetch(\"http://localhost:3000/api/publications/\" + postId, options).then(response => {\n          console.log(response);\n          document.location.href = `http://localhost:8080/publications`;\n        }).catch(err => console.log(err));\n      }\n    },\n\n    onFileChange(e) {\n      console.log(e);\n      this.dataPost.image = e.target.files[0] || e.dataTransfer.files;\n      console.log(this.dataPost.image);\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["userId","sessionStorage","getItem","name","data","dataPost","title","content","comment","created","postId","$route","params","id","console","log","fetch","method","headers","then","response","json","publication","firstname","user","lastname","methods","mounted","input","document","getElementById","fd","FormData","append","files","get","options","body","location","href","catch","err","onFileChange","e","image","target","dataTransfer"],"sourceRoot":"","sources":["D:\\Code\\Projet 7\\p7-groupomania\\P7-Groupomania\\frontend\\src\\components\\PostModifyTemplate.vue"],"sourcesContent":["<template>\r\n\r\n\r\n  <form id=\"Auth-View\" enctype=\"multipart/form-data\" method=\"post\">\r\n\r\n    <div class=\"container col align-self-center\">\r\n      <div class=\"row\" id=\"row_style\">\r\n        <h4 class=\"text-center\">Submit new post</h4>\r\n        <div class=\"col-md-4   col-md-offset-4\">\r\n          <div class=\"form-group\">\r\n            <input v-model=\"x.title\" type=\"text\" class=\"form-control\" placeholder=\"Title\">\r\n          </div>\r\n          <textarea v-model=\"dataPost.content\" id=\"editor\" cols=\"30\" rows=\"10\">Submit your text post here...</textarea>\r\n          <br>\r\n          <div class=\"form-group\">\r\n            <button @click.prevent=\"mounted\" class=\"btn btn-primary\" id=\"submit\">Submit new post</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"custom-file\">\r\n        <input type=\"file\" name=\"inputFile\" class=\"custom-file-input\" id=\"inputFile\" aria-describedby=\"inputFileAddon\"\r\n          @change=\"onFileChange\" />\r\n        <label class=\"custom-file-label\" for=\"inputFile\"></label>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n\r\n// import axios from 'axios';\r\n// import { json } from 'body-parser';\r\nconst userId = sessionStorage.getItem(\"userId\")\r\n\r\nexport default {\r\n  name: \"newPost\",\r\n  data() {\r\n    return {\r\n      dataPost: {\r\n        title: \"\",\r\n        content: \"\",\r\n        comment: \"\"\r\n\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    const postId = this.$route.params.id;\r\n    console.log(postId);\r\n    fetch(`http://localhost:3000/api/publications/` + postId, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n      },\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        this.publication = data\r\n        this.firstname = this.publication.user.firstname\r\n        this.lastname = this.publication.user.lastname\r\n\r\n        // console.log(this.publications)\r\n\r\n\r\n\r\n      })\r\n  },\r\n\r\n  methods: {\r\n\r\n    mounted() {\r\n      let postId = this.$route.params.id\r\n\r\n      let input = document.getElementById('inputFile')\r\n      const fd = new FormData();\r\n      fd.append(\"title\", this.dataPost.title);\r\n      fd.append(\"content\", this.dataPost.content);\r\n      fd.append(\"inputFile\", input.files[0]);\r\n      fd.append(\"userId\", userId);\r\n\r\n      console.log(\"test récup\", fd.get(\"title\"));\r\n      console.log(\"test récup\", fd.get(\"content\"));\r\n      console.log(\"test récup\", fd.get(\"inputFile\"));\r\n      console.log(\"test récup\", fd.get(\"userId\"));\r\n      if (this.dataPost.title && this.dataPost.content) {\r\n\r\n\r\n        const options = {\r\n          method: \"PUT\",\r\n          body: fd,\r\n          headers: {\r\n            // 'Accept': 'application/json',\r\n            // 'Content-Type': 'application/json',\r\n            'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n          }\r\n\r\n        }\r\n        fetch(\"http://localhost:3000/api/publications/\" + postId, options)\r\n\r\n\r\n\r\n          .then(response => {\r\n            console.log(response)\r\n            document.location.href = `http://localhost:8080/publications`\r\n          }).catch((err) => console.log(err))\r\n      }\r\n    },\r\n    onFileChange(e) {\r\n      console.log(e);\r\n      this.dataPost.image = e.target.files[0] || e.dataTransfer.files;\r\n      console.log(this.dataPost.image);\r\n\r\n    },\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n"]},"metadata":{},"sourceType":"module"}
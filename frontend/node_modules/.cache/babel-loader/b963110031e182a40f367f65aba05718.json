{"ast":null,"code":"// import moment from 'moment'\nimport HeaderMainPage from \"@/components/HeaderMainPage.vue\";\n\nconst moment = require('moment');\n\nmoment.locale('fr');\nexport default {\n  components: {\n    HeaderMainPage\n  },\n\n  data() {\n    return {\n      publications: \"\",\n      comment: \"\"\n    };\n  },\n\n  // computed: {\n  //   publicationId() {\n  //     return parseInt(this.$route.params.id)\n  //   },\n  // },\n  async created() {\n    fetch(`http://localhost:3000/api/publications/`).then(response => response.json()).then(data => {\n      console.log(data);\n      const postId = this.$route.params.id;\n      const MainPost = data.find(post => post.id == postId);\n      this.publications = MainPost;\n      console.log(MainPost); // const date = moment(MainPost.createdAt)\n      // date.format('Do-MMM-YYYY')\n      // console.log(date._d)\n      // const testdate = this.publications.createdAt\n      // console.log(testdate)\n      // testdate.format('YYYY-MMM-DD')\n    });\n  },\n\n  methods: {\n    SendComment() {\n      // const moment = require('moment');\n      // const aujourdhui = moment();\n      console.log(\"hello\");\n      const postId = this.$route.params.id;\n      fetch('http://localhost:3000/api/comments/', {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json' // 'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\n\n        },\n        body: JSON.stringify({\n          publicationId: this.publications.id,\n          commentaire: this.comment\n        })\n      });\n      console.log(postId);\n    }\n\n  },\n  computed: {\n    createdAt: function () {\n      console.log(moment);\n      const testdate = this.publications.createdAt;\n      return moment(testdate).format('Do MMM YYYY - LTS');\n    },\n    commentCreatedAt: function () {\n      const testdate = this.comment.createdAt;\n      console.log(testdate);\n      return moment(testdate).format('Do MMM YYYY - HH mm');\n    }\n  }\n};","map":{"version":3,"mappings":"AAyDA;AAEA,OAAOA,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,MAAK,GAAIC,OAAO,CAAC,QAAD,CAAtB;;AACAD,MAAM,CAACE,MAAP,CAAc,IAAd;AACA,eAAe;EACbC,UAAU,EAAE;IACVJ;EADU,CADC;;EAKbK,IAAI,GAAG;IACL,OAAO;MACLC,YAAY,EAAE,EADT;MAELC,OAAO,EAAE;IAFJ,CAAP;EAID,CAVY;;EAWb;EACA;EACA;EACA;EAIA;EAEA,MAAMC,OAAN,GAAgB;IAEdC,KAAK,CAAE,yCAAF,CAAL,CACGC,IADH,CACQC,QAAO,IAAKA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQL,IAAG,IAAK;MACZQ,OAAO,CAACC,GAAR,CAAYT,IAAZ;MACA,MAAMU,MAAK,GAAI,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,EAAlC;MACA,MAAMC,QAAO,GAAId,IAAI,CAACe,IAAL,CAAUC,IAAG,IAAKA,IAAI,CAACH,EAAL,IAAWH,MAA7B,CAAjB;MACA,KAAKT,YAAL,GAAoBa,QAApB;MACAN,OAAO,CAACC,GAAR,CAAYK,QAAZ,EALY,CAMZ;MACA;MACA;MACA;MACA;MACA;IAGD,CAhBH;EAkBD,CAxCY;;EA0CbG,OAAO,EAAE;IACPC,WAAW,GAAG;MACZ;MACA;MACAV,OAAO,CAACC,GAAR,CAAY,OAAZ;MACA,MAAMC,MAAK,GAAI,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,EAAlC;MACAT,KAAK,CAAC,qCAAD,EAAwC;QAC3Ce,MAAM,EAAE,MADmC;QAE3CC,OAAO,EAAE;UACP,UAAU,kBADH;UAEP,gBAAgB,kBAFT,CAGP;;QAHO,CAFkC;QAO3CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACnBC,aAAa,EAAE,KAAKvB,YAAL,CAAkBY,EADd;UAEnBY,WAAW,EAAE,KAAKvB;QAFC,CAAf;MAPqC,CAAxC,CAAL;MAYAM,OAAO,CAACC,GAAR,CAAYC,MAAZ;IAEF;;EApBO,CA1CI;EAgEbgB,QAAQ,EAAE;IACRC,SAAS,EAAE,YAAY;MAErBnB,OAAO,CAACC,GAAR,CAAYb,MAAZ;MACA,MAAMgC,QAAO,GAAI,KAAK3B,YAAL,CAAkB0B,SAAnC;MACA,OAAO/B,MAAM,CAACgC,QAAD,CAAN,CAAiBC,MAAjB,CAAwB,mBAAxB,CAAP;IAED,CAPO;IAQRC,gBAAgB,EAAE,YAAY;MAE5B,MAAMF,QAAO,GAAI,KAAK1B,OAAL,CAAayB,SAA9B;MACAnB,OAAO,CAACC,GAAR,CAAYmB,QAAZ;MACA,OAAOhC,MAAM,CAACgC,QAAD,CAAN,CAAiBC,MAAjB,CAAwB,qBAAxB,CAAP;IACF;EAbQ;AAhEG,CAAf","names":["HeaderMainPage","moment","require","locale","components","data","publications","comment","created","fetch","then","response","json","console","log","postId","$route","params","id","MainPost","find","post","methods","SendComment","method","headers","body","JSON","stringify","publicationId","commentaire","computed","createdAt","testdate","format","commentCreatedAt"],"sourceRoot":"","sources":["D:\\Code\\Projet 7\\p7-groupomania\\P7-Groupomania\\frontend\\src\\views\\PublicationSingleView.vue"],"sourcesContent":["<template>\r\n  <HeaderMainPage />\r\n\r\n\r\n  <div class=\"Publications-View\" id=\"Publications-View\">\r\n    <div class=\"container\">\r\n      <div class=\"well \">\r\n        <div class=\"media\">\r\n          <!-- <a class=\"pull-left\" href=\"#\">\r\n            <img class=\"media-object\" src=\"http://placekitten.com/150/150\">\r\n          </a> -->\r\n          <div class=\"media-body\">\r\n            <h4 class=\"media-heading\"></h4>\r\n            <p class=\"text-right fw-bold fs-3\"> {{ publications.title }}</p>\r\n            <p>{{ publications.content }}</p>\r\n            <ul class=\"list-inline list-unstyled main-post\">\r\n              <li><span><i class=\"glyphicon glyphicon-calendar\"></i> </span></li>\r\n\r\n              <!-- <span><i class=\"glyphicon glyphicon-comment\"></i> 2 comments</span> -->\r\n              <p>{{ createdAt }}</p>\r\n\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n    <div class=\"well container\">\r\n      <h4><i class=\"fa fa-paper-plane-o\"></i> Leave a Comment:</h4>\r\n      <form role=\"form\">\r\n        <div class=\"form-group\">\r\n          <textarea v-model=\"comment\" class=\"form-control\" rows=\"3\"></textarea>\r\n        </div>\r\n        <button v-on:click.prevent=\"SendComment\" type=\"submit\" value=\"\" class=\"btn btn-primary\"><i\r\n            class=\"fa fa-reply\"></i>\r\n          Submit</button>\r\n      </form>\r\n    </div>\r\n\r\n    <div v-for=\"comment in publications.comments\" :key=\"comment.id\" class=\"container\">\r\n      <h5><i class=\"\"></i> {{ comment.userId }}\r\n        <small> {{ commentCreatedAt }}</small>\r\n      </h5>\r\n      <p>{{ comment.commentaire }}</p>\r\n      <p>{{ comment.createdAt }}</p>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n// import moment from 'moment'\r\n\r\nimport HeaderMainPage from \"@/components/HeaderMainPage.vue\"\r\n\r\nconst moment = require('moment');\r\nmoment.locale('fr')\r\nexport default {\r\n  components: {\r\n    HeaderMainPage\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      publications: \"\",\r\n      comment: \"\"\r\n    }\r\n  },\r\n  // computed: {\r\n  //   publicationId() {\r\n  //     return parseInt(this.$route.params.id)\r\n  //   },\r\n\r\n\r\n\r\n  // },\r\n\r\n  async created() {\r\n\r\n    fetch(`http://localhost:3000/api/publications/`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        const postId = this.$route.params.id;\r\n        const MainPost = data.find(post => post.id == postId)\r\n        this.publications = MainPost\r\n        console.log(MainPost)\r\n        // const date = moment(MainPost.createdAt)\r\n        // date.format('Do-MMM-YYYY')\r\n        // console.log(date._d)\r\n        // const testdate = this.publications.createdAt\r\n        // console.log(testdate)\r\n        // testdate.format('YYYY-MMM-DD')\r\n\r\n\r\n      })\r\n\r\n  },\r\n\r\n  methods: {\r\n    SendComment() {\r\n      // const moment = require('moment');\r\n      // const aujourdhui = moment();\r\n      console.log(\"hello\")\r\n      const postId = this.$route.params.id;\r\n      fetch('http://localhost:3000/api/comments/', {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          // 'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n        },\r\n        body: JSON.stringify({\r\n          publicationId: this.publications.id,\r\n          commentaire: this.comment\r\n        })\r\n      })\r\n      console.log(postId)\r\n\r\n    }\r\n  },\r\n  computed: {\r\n    createdAt: function () {\r\n\r\n      console.log(moment)\r\n      const testdate = this.publications.createdAt\r\n      return moment(testdate).format('Do MMM YYYY - LTS')\r\n\r\n    },\r\n    commentCreatedAt: function () {\r\n\r\n      const testdate = this.comment.createdAt\r\n      console.log(testdate)\r\n      return moment(testdate).format('Do MMM YYYY - HH mm')\r\n    }\r\n\r\n  },\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.date {\r\n  margin-left: 25px\r\n}\r\n\r\n.comment {\r\n  margin-bottom: 20px\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// import moment from 'moment'\nimport HeaderMainPage from \"@/components/HeaderMainPage.vue\"; // const moment = require('moment');\n// moment.locale('fr')\n\nexport default {\n  components: {\n    HeaderMainPage\n  },\n\n  data() {\n    return {\n      publications: \"\",\n      comment: \"\",\n      username: \"\"\n    };\n  },\n\n  // computed: {\n  //   publicationId() {\n  //     return parseInt(this.$route.params.id)\n  //   },\n  // },\n  async created() {\n    const postId = this.$route.params.id;\n    fetch(`http://localhost:3000/api/publications/` + postId).then(response => response.json()).then(data => {\n      console.log(data);\n      this.publications = data;\n      const test = this.publications.user.username;\n      console.log(test);\n    });\n  },\n\n  methods: {\n    SendComment() {\n      // const moment = require('moment');\n      // const aujourdhui = moment();\n      console.log(\"hello\");\n      fetch('http://localhost:3000/api/comments/', {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json' // 'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\n\n        },\n        body: JSON.stringify({\n          publicationId: this.publications.id,\n          commentaire: this.comment\n        })\n      }).then(alert(\"votre commentaire a été publié\"));\n      location.reload();\n      const test = this.publications.id;\n      console.log(test).catch(error => {\n        console.log(error + \"message d'erreur filler\");\n      });\n    }\n\n  } // computed: {\n  //   createdAt: function () {\n  //     const testdate = this.publications.createdAt\n  //     return moment(testdate).format('Do MMM YYYY - LTS')\n  //   },\n  //   commentCreatedAt: function () {\n  //     const testdate = this.publications.comments[0].createdAt\n  //     console.log(testdate)\n  //     return moment(testdate).format('Do MMM YYYY - LTS')\n  //     // new Date(post.createdAt).toLocaleString(\"fr-FR\", { timeZone: \"UTC\" })\n  //   }\n  // },\n\n};","map":{"version":3,"mappings":"AA2DA;AAEA,OAAOA,cAAP,MAA2B,iCAA3B,C,CAGA;AACA;;AACA,eAAe;EACbC,UAAU,EAAE;IACVD;EADU,CADC;;EAKbE,IAAI,GAAG;IACL,OAAO;MACLC,YAAY,EAAE,EADT;MAELC,OAAO,EAAE,EAFJ;MAGLC,QAAQ,EAAE;IAHL,CAAP;EAKD,CAXY;;EAYb;EACA;EACA;EACA;EAIA;EAEA,MAAMC,OAAN,GAAgB;IACd,MAAMC,MAAK,GAAI,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,EAAlC;IACAC,KAAK,CAAE,yCAAD,GAA4CJ,MAA7C,CAAL,CACGK,IADH,CACQC,QAAO,IAAKA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQV,IAAG,IAAK;MACZa,OAAO,CAACC,GAAR,CAAYd,IAAZ;MACA,KAAKC,YAAL,GAAoBD,IAApB;MACA,MAAMe,IAAG,GAAI,KAAKd,YAAL,CAAkBe,IAAlB,CAAuBb,QAApC;MACAU,OAAO,CAACC,GAAR,CAAYC,IAAZ;IAID,CAVH;EAYD,CAnCY;;EAqCbE,OAAO,EAAE;IACPC,WAAW,GAAG;MACZ;MACA;MACAL,OAAO,CAACC,GAAR,CAAY,OAAZ;MACAL,KAAK,CAAC,qCAAD,EAAwC;QAC3CU,MAAM,EAAE,MADmC;QAE3CC,OAAO,EAAE;UACP,UAAU,kBADH;UAEP,gBAAgB,kBAFT,CAGP;;QAHO,CAFkC;QAO3CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACnBC,aAAa,EAAE,KAAKvB,YAAL,CAAkBO,EADd;UAEnBiB,WAAW,EAAE,KAAKvB;QAFC,CAAf;MAPqC,CAAxC,CAAL,CAWGQ,IAXH,CAYEgB,KAAK,CAAC,gCAAD,CAZP;MAaAC,QAAQ,CAACC,MAAT;MACA,MAAMb,IAAG,GAAI,KAAKd,YAAL,CAAkBO,EAA/B;MACAK,OAAO,CAACC,GAAR,CAAYC,IAAZ,EACGc,KADH,CACUC,KAAD,IAAW;QAChBjB,OAAO,CAACC,GAAR,CAAYgB,KAAI,GAAI,yBAApB;MACD,CAHH;IAOF;;EA3BO,CArCI,CAkEb;EACA;EAEA;EACA;EAEA;EACA;EAEA;EACA;EACA;EAEA;EAEA;EAEA;;AAnFa,CAAf","names":["HeaderMainPage","components","data","publications","comment","username","created","postId","$route","params","id","fetch","then","response","json","console","log","test","user","methods","SendComment","method","headers","body","JSON","stringify","publicationId","commentaire","alert","location","reload","catch","error"],"sourceRoot":"","sources":["D:\\Code\\Projet 7\\p7-groupomania\\P7-Groupomania\\frontend\\src\\views\\PublicationSingleView.vue"],"sourcesContent":["<template>\r\n  <HeaderMainPage />\r\n\r\n\r\n  <div class=\"Publications-View\" id=\"Publications-View\">\r\n    <div class=\"container\">\r\n      <div class=\"well \">\r\n        <div class=\"media\">\r\n          <!-- <a class=\"pull-left\" href=\"#\">\r\n            <img class=\"media-object\" src=\"http://placekitten.com/150/150\">\r\n          </a> -->\r\n          <div class=\"media-body\">\r\n            <h4 class=\"media-heading\"></h4>\r\n            <p class=\"text-right fw-bold fs-3\"> {{ publications.title }}</p>\r\n            <p>{{ publications.content }}</p>\r\n            <ul class=\"list-inline list-unstyled main-post\">\r\n              <li><span><i class=\"glyphicon glyphicon-calendar\"></i> </span></li>\r\n\r\n              <!-- <span><i class=\"glyphicon glyphicon-comment\"></i> 2 comments</span> -->\r\n              <!-- <p>Publié par {{ publications.user.username }} le {{ new\r\n                  Date(publications.createdAt).toLocaleString(\"fr-FR\", { timeZone: \"UTC\" })\r\n              }}</p> -->\r\n\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n    <div class=\"well container\">\r\n      <h4><i class=\"fa fa-paper-plane-o\"></i> Leave a Comment:</h4>\r\n      <form role=\"form\">\r\n        <div class=\"form-group\">\r\n          <textarea v-model=\"comment\" class=\"form-control\" rows=\"3\"></textarea>\r\n        </div>\r\n        <button v-on:click.prevent=\"SendComment\" type=\"submit\" value=\"\" class=\"btn btn-primary\"><i\r\n            class=\"fa fa-reply\"></i>\r\n          Submit</button>\r\n      </form>\r\n    </div>\r\n\r\n    <div v-for=\"comment in publications.comments\" :key=\"comment.id\" class=\"container\">\r\n      <h5><i class=\"\"></i> {{ comment.userId }}\r\n        <small>{{ new Date(comment.createdAt).toLocaleString(\"fr-FR\", { timeZone: \"UTC\" })\r\n        }}</small>\r\n      </h5>\r\n      <p>{{ comment.commentaire }}</p>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n// import moment from 'moment'\r\n\r\nimport HeaderMainPage from \"@/components/HeaderMainPage.vue\"\r\n\r\n\r\n// const moment = require('moment');\r\n// moment.locale('fr')\r\nexport default {\r\n  components: {\r\n    HeaderMainPage\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      publications: \"\",\r\n      comment: \"\",\r\n      username: \"\",\r\n    }\r\n  },\r\n  // computed: {\r\n  //   publicationId() {\r\n  //     return parseInt(this.$route.params.id)\r\n  //   },\r\n\r\n\r\n\r\n  // },\r\n\r\n  async created() {\r\n    const postId = this.$route.params.id;\r\n    fetch(`http://localhost:3000/api/publications/` + postId)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        this.publications = data\r\n        const test = this.publications.user.username\r\n        console.log(test)\r\n\r\n\r\n\r\n      })\r\n\r\n  },\r\n\r\n  methods: {\r\n    SendComment() {\r\n      // const moment = require('moment');\r\n      // const aujourdhui = moment();\r\n      console.log(\"hello\")\r\n      fetch('http://localhost:3000/api/comments/', {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          // 'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n        },\r\n        body: JSON.stringify({\r\n          publicationId: this.publications.id,\r\n          commentaire: this.comment\r\n        })\r\n      }).then(\r\n        alert(\"votre commentaire a été publié\"))\r\n      location.reload()\r\n      const test = this.publications.id\r\n      console.log(test)\r\n        .catch((error) => {\r\n          console.log(error + \"message d'erreur filler\")\r\n        })\r\n\r\n\r\n\r\n    }\r\n  },\r\n  // computed: {\r\n  //   createdAt: function () {\r\n\r\n  //     const testdate = this.publications.createdAt\r\n  //     return moment(testdate).format('Do MMM YYYY - LTS')\r\n\r\n  //   },\r\n  //   commentCreatedAt: function () {\r\n\r\n  //     const testdate = this.publications.comments[0].createdAt\r\n  //     console.log(testdate)\r\n  //     return moment(testdate).format('Do MMM YYYY - LTS')\r\n\r\n  //     // new Date(post.createdAt).toLocaleString(\"fr-FR\", { timeZone: \"UTC\" })\r\n\r\n  //   }\r\n\r\n  // },\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.date {\r\n  margin-left: 25px\r\n}\r\n\r\n.comment {\r\n  margin-bottom: 20px\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
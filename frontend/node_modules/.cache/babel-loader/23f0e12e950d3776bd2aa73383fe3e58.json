{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, mergeProps as _mergeProps, createBlock as _createBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"publications/new\"\n}, \"Nouveau post\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, \"HELOOOOOOOOOOO\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeaderMainPage = _resolveComponent(\"HeaderMainPage\");\n\n  const _component_Post = _resolveComponent(\"Post\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_HeaderMainPage), _hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.publications, publication => {\n    return _openBlock(), _createBlock(_component_Post, _mergeProps({\n      key: publication.id\n    }, publication), null, 16\n    /* FULL_PROPS */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.OnePost && _ctx.OnePost(...args))\n  }, \" test publication\"), _hoisted_2], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAQEA,oBAA2C,GAA3C,EAA2C;EAAxCC,IAAI,EAAC;AAAmC,CAA3C,EAA2B,cAA3B,EAAuC;AAAA;AAAvC;;gCAOAD,oBAAqB,GAArB,EAAqB,IAArB,EAAG,gBAAH,EAAiB;AAAA;AAAjB;;;;;;;6DATAE,aAAkBC,yBAAlB,GAEAC,+BAEAC,oBAGOC,SAHP,EAGO,IAHP,EAGOC,YAHqBC,kBAGrB,EAHMC,WAA2B,IAAhB;yBAAxBC,aAGOC,eAHP,cAGO;MAHoCC,GAAG,EAAEH,WAAW,CAACI;IAGrD,CAHP,EAAwEJ,WAAxE,GAAmF,IAAnF,EAAmF;IAAA;IAAnF;GAGO,CAHP;;EAAA,IAIAT,oBAAuD,QAAvD,EAAuD;IAA1Cc,OAAK,yCAAEC,qCAAF;EAAqC,CAAvD,EAA6B,mBAA7B,GACAC","names":["_createElementVNode","href","_createVNode","_component_HeaderMainPage","_hoisted_1","_createElementBlock","_Fragment","_renderList","$data","publication","_createBlock","_component_Post","key","id","onClick","_ctx","_hoisted_2"],"sourceRoot":"","sources":["D:\\Code\\Projet 7\\p7-groupomania\\P7-Groupomania\\frontend\\src\\views\\PublicationsView.vue"],"sourcesContent":["\r\n\r\n<template>\r\n\r\n\r\n\r\n  <HeaderMainPage />\r\n\r\n  <a href=\"publications/new\">Nouveau post</a>\r\n\r\n  <Post v-for=\"publication in publications\" :key=\"publication.id\" v-bind=\"publication\">\r\n\r\n\r\n  </Post>\r\n  <button v-on:click=\"OnePost\"> test publication</button>\r\n  <p>HELOOOOOOOOOOO</p>\r\n\r\n\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n\r\n\r\n\r\n\r\nimport Post from '@/components/PublicationTemplate.vue'\r\nimport HeaderMainPage from '@/components/HeaderMainPage.vue';\r\nimport moment from 'moment'\r\n\r\nexport default {\r\n  name: \"newPost\",\r\n  components: {\r\n    Post,\r\n    HeaderMainPage\r\n  },\r\n  data() {\r\n    return {\r\n      publications: []\r\n\r\n    };\r\n  },\r\n  created() {\r\n    // http://localhost:3000/api/publications/all\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n      }\r\n    }\r\n    fetch(\"http://localhost:3000/api/publications/\", options)\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        this.publications = data\r\n        console.table(data);\r\n      })\r\n\r\n  },\r\n  methods: {\r\n    moment: function () {\r\n      return moment();\r\n    }\r\n  },\r\n  filters: {\r\n    moment: function (date) {\r\n      return moment(date).format('MMMM Do YYYY, h:mm:ss a');\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  href: \"#\",\n  class: \"list-group-item list-group-item-action\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"listuser\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, user => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: user,\n      class: \"list-group\"\n    }, [_createElementVNode(\"a\", _hoisted_1, _toDisplayString(user.username), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _hoisted_2], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;EAGOA,IAAI,EAAC;EAAIC,KAAK,EAAC;;;gCAKpBC,oBAAiB,IAAjB,EAAiB,IAAjB,EAAI,UAAJ,EAAY;AAAA;AAAZ;;;gFAPAC,oBAIMC,SAJN,EAIM,IAJN,EAIMC,YAJcC,WAId,EAJMC,IAAa,IAAT;yBAAhBJ,oBAIM,KAJN,EAIM;MAJsBK,GAAG,EAAED,IAI3B;MAJiCN,KAAK,EAAC;IAIvC,CAJN,GAEEC,oBAAkF,GAAlF,cAAkFO,iBAApBF,IAAI,CAACG,QAAe,CAAlF,EAA2E;IAAA;IAA3E,EAFF;GAIM,CAJN;;EAAA,IAOAC","names":["href","class","_createElementVNode","_createElementBlock","_Fragment","_renderList","$data","user","key","_toDisplayString","username","_hoisted_2"],"sourceRoot":"","sources":["D:\\Code\\Projet 7\\p7-groupomania\\P7-Groupomania\\frontend\\src\\components\\listUser.vue"],"sourcesContent":["<template>\r\n  <div v-for=\"user in users\" :key=\"user\" class=\"list-group\">\r\n\r\n    <a href=\"#\" class=\"list-group-item list-group-item-action\">{{ user.username }}</a>\r\n\r\n  </div>\r\n\r\n\r\n  <h2>listuser</h2>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\n\r\nexport default {\r\n  name: \"Publications-View\",\r\n  data() {\r\n    return {\r\n      users: {}\r\n\r\n    };\r\n  },\r\n  created() {\r\n    // http://localhost:3000/api/publications/all\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      }\r\n    }\r\n    fetch(\"http://localhost:3000/api/user/get\", options)\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        const userlist = data.data\r\n        this.users = userlist\r\n        console.table(userlist);\r\n      })\r\n\r\n\r\n  }\r\n}\r\n\r\n</script>"]},"metadata":{},"sourceType":"module"}
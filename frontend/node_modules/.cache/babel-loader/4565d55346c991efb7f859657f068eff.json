{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, mergeProps as _mergeProps, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeaderMainPage = _resolveComponent(\"HeaderMainPage\");\n\n  const _component_FillerTemplate = _resolveComponent(\"FillerTemplate\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_HeaderMainPage), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, user => {\n    return _openBlock(), _createBlock(_component_FillerTemplate, _mergeProps({\n      key: user\n    }, user), null, 16\n    /* FULL_PROPS */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;;6DACEA,aAAkBC,yBAAlB,sBAEAC,oBAAkEC,SAAlE,EAAkE,IAAlE,EAAkEC,YAAnCC,WAAmC,EAA3CC,IAAa,IAAT;yBAA3BC,aAAkEC,yBAAlE,cAAkE;MAA3BC,GAAG,EAAEH;IAAsB,CAAlE,EAA0DA,IAA1D,GAA8D,IAA9D,EAA8D;IAAA;IAA9D;GAAkE,CAAlE;;EAAA","names":["_createVNode","_component_HeaderMainPage","_createElementBlock","_Fragment","_renderList","$data","user","_createBlock","_component_FillerTemplate","key"],"sourceRoot":"","sources":["D:\\Code\\Projet 7\\p7-groupomania\\P7-Groupomania\\frontend\\src\\views\\FillerPublication.vue"],"sourcesContent":["<template>\r\n  <HeaderMainPage />\r\n\r\n  <FillerTemplate v-for=\"user in users\" :key=\"user\" v-bind=\"user\" />\r\n\r\n\r\n\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nimport HeaderMainPage from \"@/components/HeaderMainPage.vue\";\r\nimport FillerTemplate from \"@/components/FillerTemplate.vue\";\r\n\r\nexport default {\r\n  el: \"#FillerTest\",\r\n  name: \"filler\",\r\n  components: {\r\n    HeaderMainPage,\r\n    FillerTemplate\r\n  },\r\n  data() {\r\n    return {\r\n      users: []\r\n      // publications: {\r\n      //   comments: [],\r\n      //   users: []\r\n      // }\r\n\r\n    }\r\n  },\r\n  async created() {\r\n    const postId = this.$route.params.id;\r\n    fetch(\"http://localhost:3000/api/users/\" + postId)\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        this.users = data\r\n\r\n        console.table(this.user);\r\n\r\n\r\n\r\n      })\r\n\r\n  },\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n</style>"]},"metadata":{},"sourceType":"module"}
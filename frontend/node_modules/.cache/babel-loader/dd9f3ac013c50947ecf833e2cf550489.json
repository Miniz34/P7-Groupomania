{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"commentaire\",\n  method: \"put\",\n  name: \"commentaire\"\n};\nconst _hoisted_2 = {\n  class: \"container col align-self-center\"\n};\nconst _hoisted_3 = {\n  class: \"row\",\n  id: \"row_style\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"text-center\"\n}, \"Modifier commentaire\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = {\n  class: \"col-md-4 col-md-offset-4\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"input\", {\n  for: \"commentaire\",\n  name: \"commentaire\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"commentaire\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.commentaire = $event),\n    class: \"form-control form-control-lg\",\n    type: \"text\",\n    cols: \"30\",\n    rows: \"10\",\n    name: \"commentaire\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.commentaire]]), _hoisted_7, _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.modifyComment && $options.modifyComment(...args), [\"prevent\"])),\n    class: \"btn btn-primary\",\n    id: \"submit\",\n    type: \"submit\"\n  }, \"Envoyer nouveau commentaire\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.deleteComment && $options.deleteComment(...args), [\"prevent\"])),\n    class: \"btn btn-primary\",\n    id: \"submit\"\n  }, \"Supprimer commentaire\")])])])])]);\n}","map":{"version":3,"mappings":";;EACQA,EAAE,EAAC;EAAcC,MAAM,EAAC;EAAMC,IAAI,EAAC;;;EAElCC,KAAK,EAAC;;;EACJA,KAAK,EAAC;EAAMH,EAAE,EAAC;;;gCAClBI,oBAAiD,IAAjD,EAAiD;EAA7CD,KAAK,EAAC;AAAuC,CAAjD,EAAwB,sBAAxB,EAA4C;AAAA;AAA5C;;;EACKA,KAAK,EAAC;;;gCACTC,oBAA4C,OAA5C,EAA4C;EAArCC,GAAG,EAAC,aAAiC;EAAnBH,IAAI,EAAC;AAAc,CAA5C;;AAAA;;gCAGAE,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;EACKD,KAAK,EAAC;;;uBAVnBG,oBAsBO,MAtBP,cAsBO,CApBLF,oBAmBM,KAnBN,cAmBM,CAlBJA,oBAeM,KAfN,cAeM,CAdJG,UAcI,EAbJH,oBAYM,KAZN,cAYM,CAXJI,UAWI,kBAVJJ,oBAC0C,UAD1C,EAC0C;IADhCJ,EAAE,EAAC,aAC6B;+DADNS,mBAAWC,OACL;IADOP,KAAK,EAAC,8BACb;IAD4CQ,IAAI,EAAC,MACjD;IADwDC,IAAI,EAAC,IAC7D;IAAxCC,IAAI,EAAC,IAAmC;IAA9BX,IAAI,EAAC;EAAyB,CAD1C;;EAAA,kBAAoCO,mBAUhC,EARJK,UAQI,EAPJV,oBAMM,KANN,cAMM,CAJJA,oBACsB,QADtB,EACsB;IADTW,OAAK,wDAAUC,yDAAV,EAAuB,WAAvB,EACI;IADqBb,KAAK,EAAC,iBAC3B;IAD6CH,EAAE,EAAC,QAChD;IADyDW,IAAI,EAAC;EAC9D,CADtB,EAA6F,6BAA7F,CAII,EAFJP,oBACsB,QADtB,EACsB;IADbW,OAAK,wDAAUC,yDAAV,EAAuB,WAAvB,EACQ;IADiBb,KAAK,EAAC,iBACvB;IADyCH,EAAE,EAAC;EAC5C,CADtB,EAA2E,uBAA3E,CAEI,CANN,CAOI,CAZN,CAaI,CAfN,CAkBI,CAnBN,CAoBK,CAtBP","names":["id","method","name","class","_createElementVNode","for","_createElementBlock","_hoisted_4","_hoisted_6","_ctx","$event","type","cols","rows","_hoisted_7","onClick","$options"],"sourceRoot":"","sources":["D:\\Code\\Projet 7\\p7-groupomania\\P7-Groupomania\\frontend\\src\\components\\CommentTemplate.vue"],"sourcesContent":["<template>\r\n  <form id=\"commentaire\" method=\"put\" name=\"commentaire\">\r\n\r\n    <div class=\"container col align-self-center\">\r\n      <div class=\"row\" id=\"row_style\">\r\n        <h4 class=\"text-center\">Modifier commentaire</h4>\r\n        <div class=\"col-md-4   col-md-offset-4\">\r\n          <input for=\"commentaire\" name=\"commentaire\">\r\n          <textarea id=\"commentaire\" v-model=\"commentaire\" class=\"form-control form-control-lg\" type=\"text\" cols=\"30\"\r\n            rows=\"10\" name=\"commentaire\"></textarea>\r\n          <br>\r\n          <div class=\"form-group\">\r\n\r\n            <button v-on:click.prevent=\"modifyComment\" class=\"btn btn-primary\" id=\"submit\" type=\"submit\">Envoyer nouveau\r\n              commentaire</button>\r\n            <button @click.prevent=\"deleteComment\" class=\"btn btn-primary\" id=\"submit\">Supprimer\r\n              commentaire</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  </form>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: \"Comment-Template\",\r\n\r\n  data() {\r\n    return {\r\n      comments: {\r\n        commentaire: \"\",\r\n        publicationId: \"\",\r\n        userId: \"\"\r\n\r\n      }\r\n    }\r\n  },\r\n  // mounted() {\r\n  //   const commentId = this.$route.params.id;\r\n  //   fetch('http://localhost:3000/api/comments/' + commentId, {\r\n  //     method: \"GET\",\r\n  //     headers: {\r\n  //       // 'Accept': 'application/json',\r\n  //       // 'Content-Type': 'application/json',\r\n  //       'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n  //     },\r\n\r\n\r\n  //   }).then(response => response.json())\r\n  //     .then(data => {\r\n  //       console.log(data)\r\n  //       this.commentaire = data\r\n\r\n  //     })\r\n  // },\r\n\r\n  methods: {\r\n    modifyComment() {\r\n      const commentId = this.$route.params.id;\r\n      // const fd = new FormData();\r\n      // fd.append(\"commentaire\", this.commentaire);\r\n      fetch('http://localhost:3000/api/comments/' + commentId, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ commentaire: this.commentaire }),\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n        },\r\n\r\n      })\r\n        .then(() => {\r\n          alert(\"commentaire modifié\")\r\n        })\r\n      document.location.href = `http://localhost:8080/users`\r\n\r\n    },\r\n\r\n    deleteComment() {\r\n      const commentId = this.$route.params.id;\r\n      fetch('http://localhost:3000/api/comments/' + commentId, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          // 'Accept': 'application/json',\r\n          // 'Content-Type': 'application/json',\r\n          'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n        },\r\n      })\r\n        .then(() => {\r\n          alert(\"commentaire supprimé\")\r\n          document.location.href = `http://localhost:8080/users`\r\n        })\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n</style>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export default {\n  name: \"Comment-Template\",\n\n  data() {\n    return {\n      commentaire: \"\",\n      publicationId: \"\",\n      userId: \"\"\n    };\n  },\n\n  mounted() {\n    const commentId = this.$route.params.id;\n    fetch('http://localhost:3000/api/comments/' + commentId, {\n      method: \"GET\",\n      headers: {\n        // 'Accept': 'application/json',\n        // 'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      this.commentaire = data;\n    });\n  },\n\n  methods: {\n    modifyComment() {\n      const commentId = this.$route.params.id;\n      const fd = new FormData();\n      fd.append(\"commentaire\", this.commentaire);\n      fetch('http://localhost:3000/api/comments/' + commentId, {\n        method: \"PUT\",\n        headers: {\n          // 'Accept': 'application/json',\n          // 'Content-Type': 'application/json',\n          'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\n        },\n        body: fd\n      }).then(console.log(\"test récup\", fd.get(\"commentaire\")));\n    },\n\n    deleteComment() {\n      const commentId = this.$route.params.id;\n      fetch('http://localhost:3000/api/comments/' + commentId, {\n        method: \"DELETE\",\n        headers: {\n          // 'Accept': 'application/json',\n          // 'Content-Type': 'application/json',\n          'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA2BA,eAAe;EACbA,IAAI,EAAE,kBADO;;EAGbC,IAAI,GAAG;IACL,OAAO;MACLC,WAAW,EAAE,EADR;MAELC,aAAa,EAAE,EAFV;MAGLC,MAAM,EAAE;IAHH,CAAP;EAMD,CAVY;;EAWbC,OAAO,GAAG;IACR,MAAMC,SAAQ,GAAI,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,EAArC;IACAC,KAAK,CAAC,wCAAwCJ,SAAzC,EAAoD;MACvDK,MAAM,EAAE,KAD+C;MAEvDC,OAAO,EAAE;QACP;QACA;QACA,iBAAiB,YAAYC,cAAc,CAACC,OAAf,CAAuB,OAAvB;MAHtB;IAF8C,CAApD,CAAL,CASGC,IATH,CASQC,QAAO,IAAKA,QAAQ,CAACC,IAAT,EATpB,EAUGF,IAVH,CAUQd,IAAG,IAAK;MACZiB,OAAO,CAACC,GAAR,CAAYlB,IAAZ;MACA,KAAKC,WAAL,GAAmBD,IAAnB;IAED,CAdH;EAeD,CA5BY;;EA8BbmB,OAAO,EAAE;IACPC,aAAa,GAAG;MACd,MAAMf,SAAQ,GAAI,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,EAArC;MACA,MAAMa,EAAC,GAAI,IAAIC,QAAJ,EAAX;MACAD,EAAE,CAACE,MAAH,CAAU,aAAV,EAAyB,KAAKtB,WAA9B;MACAQ,KAAK,CAAC,wCAAwCJ,SAAzC,EAAoD;QACvDK,MAAM,EAAE,KAD+C;QAEvDC,OAAO,EAAE;UACP;UACA;UACA,iBAAiB,YAAYC,cAAc,CAACC,OAAf,CAAuB,OAAvB;QAHtB,CAF8C;QAOvDW,IAAI,EAAEH;MAPiD,CAApD,CAAL,CAQGP,IARH,CAQQG,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BG,EAAE,CAACI,GAAH,CAAO,aAAP,CAA1B,CARR;IAUD,CAfM;;IAiBPC,aAAa,GAAG;MACd,MAAMrB,SAAQ,GAAI,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,EAArC;MACAC,KAAK,CAAC,wCAAwCJ,SAAzC,EAAoD;QACvDK,MAAM,EAAE,QAD+C;QAEvDC,OAAO,EAAE;UACP;UACA;UACA,iBAAiB,YAAYC,cAAc,CAACC,OAAf,CAAuB,OAAvB;QAHtB;MAF8C,CAApD,CAAL;IAQF;;EA3BO;AA9BI,CAAf","names":["name","data","commentaire","publicationId","userId","mounted","commentId","$route","params","id","fetch","method","headers","sessionStorage","getItem","then","response","json","console","log","methods","modifyComment","fd","FormData","append","body","get","deleteComment"],"sourceRoot":"","sources":["D:\\Code\\Projet 7\\p7-groupomania\\P7-Groupomania\\frontend\\src\\components\\CommentTemplate.vue"],"sourcesContent":["<template>\r\n  <form id=\"Auth-View\" enctype=\"multipart/form-data\" method=\"post\">\r\n\r\n    <div class=\"container col align-self-center\">\r\n      <div class=\"row\" id=\"row_style\">\r\n        <h4 class=\"text-center\">Modifier commentaire</h4>\r\n        <div class=\"col-md-4   col-md-offset-4\">\r\n          <label for=\"commentaire\" class=\"col-md-4 col-form-label text-md-right form-control\">Entrer nouveau\r\n            commentaire</label>\r\n          <textarea id=\"commentaire\" v-model=\"commentaire\" cols=\"30\" rows=\"10\"></textarea>\r\n          <br>\r\n          <div class=\"form-group\">\r\n            <button @click.prevent=\"modifyComment\" class=\"btn btn-primary\" id=\"submit\">Envoyer nouveau\r\n              commentaire</button>\r\n            <button @click.prevent=\"deleteComment\" class=\"btn btn-primary\" id=\"submit\">Supprimer\r\n              commentaire</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: \"Comment-Template\",\r\n\r\n  data() {\r\n    return {\r\n      commentaire: \"\",\r\n      publicationId: \"\",\r\n      userId: \"\"\r\n\r\n    }\r\n  },\r\n  mounted() {\r\n    const commentId = this.$route.params.id;\r\n    fetch('http://localhost:3000/api/comments/' + commentId, {\r\n      method: \"GET\",\r\n      headers: {\r\n        // 'Accept': 'application/json',\r\n        // 'Content-Type': 'application/json',\r\n        'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n      },\r\n\r\n\r\n    }).then(response => response.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        this.commentaire = data\r\n\r\n      })\r\n  },\r\n\r\n  methods: {\r\n    modifyComment() {\r\n      const commentId = this.$route.params.id;\r\n      const fd = new FormData();\r\n      fd.append(\"commentaire\", this.commentaire);\r\n      fetch('http://localhost:3000/api/comments/' + commentId, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          // 'Accept': 'application/json',\r\n          // 'Content-Type': 'application/json',\r\n          'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n        },\r\n        body: fd\r\n      }).then(console.log(\"test récup\", fd.get(\"commentaire\")))\r\n\r\n    },\r\n\r\n    deleteComment() {\r\n      const commentId = this.$route.params.id;\r\n      fetch('http://localhost:3000/api/comments/' + commentId, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          // 'Accept': 'application/json',\r\n          // 'Content-Type': 'application/json',\r\n          'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n        },\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n</style>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import HeaderMainPage from \"@/components/HeaderMainPage.vue\";\nlet id = sessionStorage.getItem(\"userId\");\nconsole.log(id);\nexport default {\n  components: {\n    HeaderMainPage\n  },\n\n  data() {\n    return {\n      publications: {},\n      comment: \"\",\n      image: \"\",\n      username: \"\",\n      id: sessionStorage.getItem(\"userId\"),\n      admin: sessionStorage.getItem(\"isAdmin\")\n    };\n  },\n\n  created() {\n    const postId = this.$route.params.id;\n    fetch(`http://localhost:3000/api/publications/` + postId, {\n      method: \"GET\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      this.publications = data;\n      console.log(this.publications);\n      this.username = this.publications.user.username;\n    });\n  },\n\n  methods: {\n    SendComment() {\n      // const moment = require('moment');\n      // const aujourdhui = moment();\n      console.log(\"hello\");\n      fetch('http://localhost:3000/api/comments/', {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\n        },\n        body: JSON.stringify({\n          publicationId: this.publications.id,\n          commentaire: this.comment,\n          userId: id\n        })\n      }).then(alert(\"votre commentaire a été publié\"));\n      location.reload();\n      const test = this.publications.id;\n      console.log(test).catch(error => {\n        console.log(error + \"message d'erreur filler\");\n      });\n    },\n\n    deletePost() {\n      const postId = this.$route.params.id;\n      fetch('http://localhost:3000/api/publications/' + postId, {\n        method: \"DELETE\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\n        }\n      }).then(() => document.location.href = `http://localhost:8080/publications`);\n    } //////////////////// // Version obscure de v-if  ////////////////////////\n    // showButtons() {\n    //   let newId = sessionStorage.getItem(\"userId\")\n    //   // console.log(newId)\n    //   // let postCreator = false\n    //   // idPost = this.publications.user.userId\n    //   let idPost = this.publications.userId\n    //   if (newId == idPost) {\n    //     // postCreator = true\n    //     // console.log(postCreator)\n    //     console.log(newId)\n    //     console.log(idPost)\n    //     return true\n    //   } else {\n    //     // postCreator = false\n    //     // console.log(postCreator)\n    //     console.log(newId)\n    //     console.log(idPost)\n    //     return false\n    //   }\n    // }\n\n\n  }\n};","map":{"version":3,"mappings":"AA8EA,OAAOA,cAAP,MAA2B,iCAA3B;AACA,IAAIC,EAAC,GAAIC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAAT;AACAC,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AAKA,eAAe;EACbK,UAAU,EAAE;IACVN;EADU,CADC;;EAIbO,IAAI,GAAG;IACL,OAAO;MACLC,YAAY,EAAE,EADT;MAELC,OAAO,EAAE,EAFJ;MAGLC,KAAK,EAAE,EAHF;MAILC,QAAQ,EAAE,EAJL;MAKLV,EAAE,EAAEC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CALC;MAMLS,KAAK,EAAEV,cAAc,CAACC,OAAf,CAAuB,SAAvB;IANF,CAAP;EAQD,CAbY;;EAcbU,OAAO,GAAG;IAGR,MAAMC,MAAK,GAAI,KAAKC,MAAL,CAAYC,MAAZ,CAAmBf,EAAlC;IACAgB,KAAK,CAAE,yCAAD,GAA4CH,MAA7C,EAAqD;MACxDI,MAAM,EAAE,KADgD;MAExDC,OAAO,EAAE;QACP,UAAU,kBADH;QAEP,gBAAgB,kBAFT;QAGP,iBAAiB,YAAYjB,cAAc,CAACC,OAAf,CAAuB,OAAvB;MAHtB;IAF+C,CAArD,CAAL,CAQGiB,IARH,CAQQC,QAAO,IAAKA,QAAQ,CAACC,IAAT,EARpB,EASGF,IATH,CASQb,IAAG,IAAK;MACZH,OAAO,CAACC,GAAR,CAAYE,IAAZ;MACA,KAAKC,YAAL,GAAoBD,IAApB;MACAH,OAAO,CAACC,GAAR,CAAY,KAAKG,YAAjB;MACA,KAAKG,QAAL,GAAgB,KAAKH,YAAL,CAAkBe,IAAlB,CAAuBZ,QAAvC;IAGD,CAhBH;EAkBD,CApCY;;EAqCba,OAAO,EAAE;IACPC,WAAW,GAAG;MACZ;MACA;MACArB,OAAO,CAACC,GAAR,CAAY,OAAZ;MACAY,KAAK,CAAC,qCAAD,EAAwC;QAC3CC,MAAM,EAAE,MADmC;QAE3CC,OAAO,EAAE;UACP,UAAU,kBADH;UAEP,gBAAgB,kBAFT;UAGP,iBAAiB,YAAYjB,cAAc,CAACC,OAAf,CAAuB,OAAvB;QAHtB,CAFkC;QAO3CuB,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACnBC,aAAa,EAAE,KAAKrB,YAAL,CAAkBP,EADd;UAEnB6B,WAAW,EAAE,KAAKrB,OAFC;UAGnBsB,MAAM,EAAE9B;QAHW,CAAf;MAPqC,CAAxC,CAAL,CAYGmB,IAZH,CAaEY,KAAK,CAAC,gCAAD,CAbP;MAcAC,QAAQ,CAACC,MAAT;MACA,MAAMC,IAAG,GAAI,KAAK3B,YAAL,CAAkBP,EAA/B;MACAG,OAAO,CAACC,GAAR,CAAY8B,IAAZ,EACGC,KADH,CACUC,KAAD,IAAW;QAChBjC,OAAO,CAACC,GAAR,CAAYgC,KAAI,GAAI,yBAApB;MACD,CAHH;IAID,CAzBM;;IA0BPC,UAAU,GAAG;MACX,MAAMxB,MAAK,GAAI,KAAKC,MAAL,CAAYC,MAAZ,CAAmBf,EAAlC;MACAgB,KAAK,CAAC,4CAA4CH,MAA7C,EAAqD;QACxDI,MAAM,EAAE,QADgD;QAExDC,OAAO,EAAE;UACP,UAAU,kBADH;UAEP,gBAAgB,kBAFT;UAGP,iBAAiB,YAAYjB,cAAc,CAACC,OAAf,CAAuB,OAAvB;QAHtB;MAF+C,CAArD,CAAL,CASGiB,IATH,CASQ,MACJmB,QAAQ,CAACN,QAAT,CAAkBO,IAAlB,GAA0B,oCAV9B;IAaD,CAzCM,CA6CP;IAGA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAKA;IACA;IACA;IACA;IACA;IACA;IAGA;IACA;;;EA1EO;AArCI,CAAf","names":["HeaderMainPage","id","sessionStorage","getItem","console","log","components","data","publications","comment","image","username","admin","created","postId","$route","params","fetch","method","headers","then","response","json","user","methods","SendComment","body","JSON","stringify","publicationId","commentaire","userId","alert","location","reload","test","catch","error","deletePost","document","href"],"sourceRoot":"","sources":["D:\\Code\\Projet 7\\p7-groupomania\\P7-Groupomania\\frontend\\src\\views\\PublicationSingleView.vue"],"sourcesContent":["<template>\r\n  <HeaderMainPage />\r\n  <div class=\"Publications-View\" id=\"Publications-View\">\r\n    <div class=\"container\">\r\n      <div class=\"well \">\r\n        <div class=\"media\">\r\n          <div class=\"media-body\">\r\n            <h4 class=\"media-heading\"></h4>\r\n            <p class=\"text-right fw-bold fs-3\"> {{ publications.title }}</p>\r\n            <div class=\"card-img-top w-50 mx-auto\" v-if=\"publications.image\">\r\n              <img :src=\"publications.image\" alt=\"image publication\" class=\"w-100\" />\r\n            </div>\r\n            <p>{{ publications.content }}</p>\r\n            <ul class=\"list-inline list-unstyled main-post\">\r\n              <li><span><i class=\"glyphicon glyphicon-calendar\"></i> </span></li>\r\n              <p>Publié par {{ username }} le {{ new\r\n                  Date(publications.createdAt).toLocaleString(\"fr-FR\", { timeZone: \"UTC\" })\r\n              }}</p>\r\n\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"modify container\">\r\n      <router-link :to=\"{ name: 'Modify', params: { id: this.$route.params.id } }\">\r\n\r\n        <button v-if=\"id == this.publications.userId || admin == `true`\" class=\" btn btn-warning btn-sm\">Modifier\r\n          publication</button>\r\n      </router-link>\r\n\r\n      <button v-if=\"id == this.publications.userId || admin == `true`\" @click=\"deletePost\"\r\n        class=\"btn btn-danger btn-sm\">Supprimer\r\n        publication</button>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"well container\">\r\n      <h4><i class=\"fa fa-paper-plane-o\"></i> Leave a Comment:</h4>\r\n      <form role=\"form\">\r\n        <div class=\"form-group\">\r\n          <textarea v-model=\"comment\" class=\"form-control\" rows=\"3\"></textarea>\r\n        </div>\r\n        <button v-on:click.prevent=\"SendComment\" type=\"submit\" value=\"\" class=\"btn btn-primary btn-sm\"><i\r\n            class=\"fa fa-reply\"></i>\r\n          Envoyer commentaire</button>\r\n      </form>\r\n    </div>\r\n    <div v-for=\"comment in publications.comments\" :key=\"comment.id\" class=\"container\">\r\n      <h5><i class=\"commentaire\"></i>Commentaire de {{ comment.user.username }}\r\n        <small>{{ new Date(comment.createdAt).toLocaleString(\"fr-FR\", { timeZone: \"UTC\" })\r\n        }}</small>\r\n      </h5>\r\n      <p>{{ comment.commentaire }}</p>\r\n      <router-link :to=\"{ name: 'ModifyComment', params: { id: comment.id } }\">\r\n        <button v-if=\"id == comment.userId || admin == `true`\" class=\"btn btn-warning btn-sm\"> Modifier commentaire\r\n        </button>\r\n      </router-link>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport HeaderMainPage from \"@/components/HeaderMainPage.vue\"\r\nlet id = sessionStorage.getItem(\"userId\")\r\nconsole.log(id)\r\n\r\n\r\n\r\n\r\nexport default {\r\n  components: {\r\n    HeaderMainPage\r\n  },\r\n  data() {\r\n    return {\r\n      publications: {},\r\n      comment: \"\",\r\n      image: \"\",\r\n      username: \"\",\r\n      id: sessionStorage.getItem(\"userId\"),\r\n      admin: sessionStorage.getItem(\"isAdmin\")\r\n    }\r\n  },\r\n  created() {\r\n\r\n\r\n    const postId = this.$route.params.id;\r\n    fetch(`http://localhost:3000/api/publications/` + postId, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n      },\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        this.publications = data\r\n        console.log(this.publications)\r\n        this.username = this.publications.user.username\r\n\r\n\r\n      })\r\n\r\n  },\r\n  methods: {\r\n    SendComment() {\r\n      // const moment = require('moment');\r\n      // const aujourdhui = moment();\r\n      console.log(\"hello\")\r\n      fetch('http://localhost:3000/api/comments/', {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n        },\r\n        body: JSON.stringify({\r\n          publicationId: this.publications.id,\r\n          commentaire: this.comment,\r\n          userId: id\r\n        })\r\n      }).then(\r\n        alert(\"votre commentaire a été publié\"))\r\n      location.reload()\r\n      const test = this.publications.id\r\n      console.log(test)\r\n        .catch((error) => {\r\n          console.log(error + \"message d'erreur filler\")\r\n        })\r\n    },\r\n    deletePost() {\r\n      const postId = this.$route.params.id;\r\n      fetch('http://localhost:3000/api/publications/' + postId, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n        },\r\n\r\n      })\r\n        .then(() =>\r\n          document.location.href = `http://localhost:8080/publications`)\r\n\r\n\r\n    },\r\n\r\n\r\n\r\n    //////////////////// // Version obscure de v-if  ////////////////////////\r\n\r\n\r\n    // showButtons() {\r\n    //   let newId = sessionStorage.getItem(\"userId\")\r\n    //   // console.log(newId)\r\n\r\n    //   // let postCreator = false\r\n    //   // idPost = this.publications.user.userId\r\n    //   let idPost = this.publications.userId\r\n    //   if (newId == idPost) {\r\n    //     // postCreator = true\r\n    //     // console.log(postCreator)\r\n    //     console.log(newId)\r\n    //     console.log(idPost)\r\n    //     return true\r\n\r\n\r\n\r\n\r\n    //   } else {\r\n    //     // postCreator = false\r\n    //     // console.log(postCreator)\r\n    //     console.log(newId)\r\n    //     console.log(idPost)\r\n    //     return false\r\n\r\n\r\n    //   }\r\n    // }\r\n  },\r\n\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.date {\r\n  margin-left: 25px\r\n}\r\n\r\n.comment {\r\n  margin-bottom: 20px\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Post = _resolveComponent(\"Post\");\n\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.publications, publication => {\n    return _openBlock(), _createBlock(_component_Post, {\n      key: publication,\n      content: publication.content,\n      userId: publication.userId,\n      createdAt: publication.createdAt\n    }, null, 8\n    /* PROPS */\n    , [\"content\", \"userId\", \"createdAt\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;2BAKEA,oBAIOC,SAJP,EAIO,IAJP,EAIOC,YAJqBC,kBAIrB,EAJMC,WAA2B,IAAhB;yBAAxBC,aAIOC,eAJP,EAIO;MAJoCC,GAAG,EAAEH,WAIzC;MAJuDI,OAAO,EAAEJ,WAAW,CAACI,OAI5E;MAHJC,MAAM,EAAEL,WAAW,CAACK,MAGhB;MAHyBC,SAAS,EAAEN,WAAW,CAACM;IAGhD,CAJP;;IAAA;GAIO,CAJP;;EAAA","names":["_createElementBlock","_Fragment","_renderList","$data","publication","_createBlock","_component_Post","key","content","userId","createdAt"],"sourceRoot":"","sources":["D:\\Code\\Projet 7\\p7-groupomania\\P7-Groupomania\\frontend\\src\\views\\PublicationsView.vue"],"sourcesContent":["\r\n\r\n<template>\r\n\r\n\r\n  <Post v-for=\"publication in publications\" :key=\"publication\" :content=\"publication.content\"\r\n    :userId=\"publication.userId\" :createdAt=\"publication.createdAt\">\r\n\r\n\r\n  </Post>\r\n\r\n\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n\r\n\r\n\r\n// import publicationComp from \"@/components/publicationComp.vue\";\r\nimport Post from '@/components/publicationComp.vue'\r\n\r\n\r\n\r\n\r\nexport default {\r\n  name: \"Post\",\r\n  components: {\r\n    Post\r\n  },\r\n  data() {\r\n    return {\r\n      publications: []\r\n\r\n    };\r\n  },\r\n  created() {\r\n    // http://localhost:3000/api/publications/all\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n      }\r\n    }\r\n    fetch(\"http://localhost:3000/api/publications/\", options)\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        this.publications = data\r\n        console.table(data);\r\n      })\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n</script>\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \" Liste des publications importées du component\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Et en dessous le random formulaire\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_testPost = _resolveComponent(\"testPost\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createVNode(_component_testPost), _hoisted_2], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAGEA,oBAAuD,IAAvD,EAAuD,IAAvD,EAAI,gDAAJ,EAAkD;AAAA;AAAlD;;gCAIAA,oBAA2C,IAA3C,EAA2C,IAA3C,EAAI,oCAAJ,EAAsC;AAAA;AAAtC;;;;;6DAJAC,YAEAC,aAAYC,mBAAZ,GAEAC","names":["_createElementVNode","_hoisted_1","_createVNode","_component_testPost","_hoisted_2"],"sourceRoot":"","sources":["D:\\Code\\Projet 7\\p7-groupomania\\P7-Groupomania\\frontend\\src\\views\\newPost.vue"],"sourcesContent":["\r\n<template>\r\n\r\n  <h1> Liste des publications importées du component</h1>\r\n\r\n  <testPost />\r\n\r\n  <h2>Et en dessous le random formulaire</h2>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n\r\n\r\nimport publicationComp from \"@/components/publicationComp.vue\";\r\nimport testPost from '@/components/testpost.vue'\r\n\r\n\r\n\r\n\r\nexport default {\r\n   name: \"newPost\",\r\n  components: {\r\n    publicationComp\r\n  },\r\n  data() {\r\n    return {\r\n      publications: []\r\n\r\n    };\r\n  },\r\n  created() {\r\n    // http://localhost:3000/api/publications/all\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n      }\r\n    }\r\n    fetch(\"http://localhost:3000/api/publications/\", options)\r\n      .then((response) => response.json())\r\n      .then(data => {\r\n        this.publications = data\r\n        console.table(data);\r\n      })\r\n\r\n\r\n  },}\r\n\r\n\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}
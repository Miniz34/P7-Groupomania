{"ast":null,"code":"import HeaderMainPage from \"@/components/HeaderMainPage.vue\";\nlet id = sessionStorage.getItem(\"userId\");\nconsole.log(id);\nexport default {\n  components: {\n    HeaderMainPage\n  },\n\n  data() {\n    return {\n      publications: \"\",\n      comment: \"\",\n      image: \"\"\n    };\n  },\n\n  async created() {\n    const postId = this.$route.params.id;\n    fetch(`http://localhost:3000/api/publications/` + postId).then(response => response.json()).then(data => {\n      console.log(data);\n      this.publications = data;\n    });\n  },\n\n  methods: {\n    SendComment() {\n      // const moment = require('moment');\n      // const aujourdhui = moment();\n      console.log(\"hello\");\n      fetch('http://localhost:3000/api/comments/', {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json' // 'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\n\n        },\n        body: JSON.stringify({\n          publicationId: this.publications.id,\n          commentaire: this.comment,\n          userId: id\n        })\n      }).then(alert(\"votre commentaire a été publié\"));\n      location.reload();\n      const test = this.publications.id;\n      console.log(test).catch(error => {\n        console.log(error + \"message d'erreur filler\");\n      });\n    },\n\n    deletePost() {\n      const postId = this.$route.params.id;\n      fetch('http://localhost:3000/api/publications/' + postId, {\n        method: \"DELETE\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json' // 'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\n\n        }\n      });\n    },\n\n    showButtons() {\n      let newId = sessionStorage.getItem(\"userId\");\n      console.log(newId);\n      let postCreator = false; // idPost = this.publications.user.userId\n\n      let idPost = this.publications.userId;\n\n      if (id == idPost) {\n        postCreator = true;\n        console.log(postCreator);\n        return postCreator;\n      } else {\n        postCreator = false;\n        console.log(postCreator);\n        return postCreator;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAkEA,OAAOA,cAAP,MAA2B,iCAA3B;AACA,IAAIC,EAAC,GAAIC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAAT;AACAC,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AAKA,eAAe;EACbK,UAAU,EAAE;IACVN;EADU,CADC;;EAIbO,IAAI,GAAG;IACL,OAAO;MACLC,YAAY,EAAE,EADT;MAELC,OAAO,EAAE,EAFJ;MAGLC,KAAK,EAAE;IAHF,CAAP;EAKD,CAVY;;EAWb,MAAMC,OAAN,GAAgB;IACd,MAAMC,MAAK,GAAI,KAAKC,MAAL,CAAYC,MAAZ,CAAmBb,EAAlC;IACAc,KAAK,CAAE,yCAAD,GAA4CH,MAA7C,CAAL,CACGI,IADH,CACQC,QAAO,IAAKA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQT,IAAG,IAAK;MACZH,OAAO,CAACC,GAAR,CAAYE,IAAZ;MACA,KAAKC,YAAL,GAAoBD,IAApB;IACD,CALH;EAMD,CAnBY;;EAoBbY,OAAO,EAAE;IACPC,WAAW,GAAG;MACZ;MACA;MACAhB,OAAO,CAACC,GAAR,CAAY,OAAZ;MACAU,KAAK,CAAC,qCAAD,EAAwC;QAC3CM,MAAM,EAAE,MADmC;QAE3CC,OAAO,EAAE;UACP,UAAU,kBADH;UAEP,gBAAgB,kBAFT,CAGP;;QAHO,CAFkC;QAO3CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACnBC,aAAa,EAAE,KAAKlB,YAAL,CAAkBP,EADd;UAEnB0B,WAAW,EAAE,KAAKlB,OAFC;UAGnBmB,MAAM,EAAE3B;QAHW,CAAf;MAPqC,CAAxC,CAAL,CAYGe,IAZH,CAaEa,KAAK,CAAC,gCAAD,CAbP;MAcAC,QAAQ,CAACC,MAAT;MACA,MAAMC,IAAG,GAAI,KAAKxB,YAAL,CAAkBP,EAA/B;MACAG,OAAO,CAACC,GAAR,CAAY2B,IAAZ,EACGC,KADH,CACUC,KAAD,IAAW;QAChB9B,OAAO,CAACC,GAAR,CAAY6B,KAAI,GAAI,yBAApB;MACD,CAHH;IAID,CAzBM;;IA0BPC,UAAU,GAAG;MACX,MAAMvB,MAAK,GAAI,KAAKC,MAAL,CAAYC,MAAZ,CAAmBb,EAAlC;MACAc,KAAK,CAAC,4CAA4CH,MAA7C,EAAqD;QACxDS,MAAM,EAAE,QADgD;QAExDC,OAAO,EAAE;UACP,UAAU,kBADH;UAEP,gBAAgB,kBAFT,CAGP;;QAHO;MAF+C,CAArD,CAAL;IASD,CArCM;;IAsCPc,WAAW,GAAG;MACZ,IAAIC,KAAI,GAAInC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAAZ;MACAC,OAAO,CAACC,GAAR,CAAYgC,KAAZ;MAEA,IAAIC,WAAU,GAAI,KAAlB,CAJY,CAKZ;;MACA,IAAIC,MAAK,GAAI,KAAK/B,YAAL,CAAkBoB,MAA/B;;MACA,IAAI3B,EAAC,IAAKsC,MAAV,EAAkB;QAChBD,WAAU,GAAI,IAAd;QACAlC,OAAO,CAACC,GAAR,CAAYiC,WAAZ;QACA,OAAOA,WAAP;MAKF,CARA,MAQO;QACLA,WAAU,GAAI,KAAd;QACAlC,OAAO,CAACC,GAAR,CAAYiC,WAAZ;QACA,OAAOA,WAAP;MAGF;IACF;;EA5DO;AApBI,CAAf","names":["HeaderMainPage","id","sessionStorage","getItem","console","log","components","data","publications","comment","image","created","postId","$route","params","fetch","then","response","json","methods","SendComment","method","headers","body","JSON","stringify","publicationId","commentaire","userId","alert","location","reload","test","catch","error","deletePost","showButtons","newId","postCreator","idPost"],"sourceRoot":"","sources":["D:\\Code\\Projet 7\\p7-groupomania\\P7-Groupomania\\frontend\\src\\views\\PublicationSingleView.vue"],"sourcesContent":["<template>\r\n  <HeaderMainPage />\r\n  <div class=\"Publications-View\" id=\"Publications-View\">\r\n    <div class=\"container\">\r\n      <div class=\"well \">\r\n        <div class=\"media\">\r\n          <div class=\"media-body\">\r\n            <h4 class=\"media-heading\"></h4>\r\n            <p class=\"text-right fw-bold fs-3\"> {{ publications.title }}</p>\r\n            <div class=\"card-img-top w-50 mx-auto\" v-if=\"publications.image\">\r\n              <img :src=\"publications.image\" alt=\"...\" class=\"w-100\" />\r\n            </div>\r\n            <p>{{ publications.content }}</p>\r\n            <ul class=\"list-inline list-unstyled main-post\">\r\n              <li><span><i class=\"glyphicon glyphicon-calendar\"></i> </span></li>\r\n              <p>Publié par {{ publications.user.username }} le {{ new\r\n                  Date(publications.createdAt).toLocaleString(\"fr-FR\", { timeZone: \"UTC\" })\r\n              }}</p>\r\n\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"modify\">\r\n      <router-link :to=\"{ name: 'Modify', params: { id: this.$route.params.id } }\">\r\n\r\n        <button>Modifier publication</button>\r\n      </router-link>\r\n      <router-link :to=\"{ name: 'Modify', params: { id: this.$route.params.id } }\">\r\n\r\n        <button @click.prevent=\"deletePost\">Supprimer publication</button>\r\n      </router-link>\r\n      <button v-if=\"postCreator == true\" @click.prevent=\"showButtons\">test1</button>\r\n      <button v-if=\"id\" @click.prevent=\"showButtons\">testblanc</button>\r\n      <button @click.prevent=\"showButtons\">toujours actif</button>\r\n    </div>\r\n\r\n\r\n    <div class=\"well container\">\r\n      <h4><i class=\"fa fa-paper-plane-o\"></i> Leave a Comment:</h4>\r\n      <form role=\"form\">\r\n        <div class=\"form-group\">\r\n          <textarea v-model=\"comment\" class=\"form-control\" rows=\"3\"></textarea>\r\n        </div>\r\n        <button v-on:click.prevent=\"SendComment\" type=\"submit\" value=\"\" class=\"btn btn-primary\"><i\r\n            class=\"fa fa-reply\"></i>\r\n          Submit</button>\r\n      </form>\r\n    </div>\r\n    <div v-for=\"comment in publications.comments\" :key=\"comment.id\" class=\"container\">\r\n      <h5><i class=\"commentaire\"></i>Commentaire de {{ comment.user.username }}\r\n        <small>{{ new Date(comment.createdAt).toLocaleString(\"fr-FR\", { timeZone: \"UTC\" })\r\n        }}</small>\r\n      </h5>\r\n      <p>{{ comment.commentaire }}</p>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport HeaderMainPage from \"@/components/HeaderMainPage.vue\"\r\nlet id = sessionStorage.getItem(\"userId\")\r\nconsole.log(id)\r\n\r\n\r\n\r\n\r\nexport default {\r\n  components: {\r\n    HeaderMainPage\r\n  },\r\n  data() {\r\n    return {\r\n      publications: \"\",\r\n      comment: \"\",\r\n      image: \"\"\r\n    }\r\n  },\r\n  async created() {\r\n    const postId = this.$route.params.id;\r\n    fetch(`http://localhost:3000/api/publications/` + postId)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        this.publications = data\r\n      })\r\n  },\r\n  methods: {\r\n    SendComment() {\r\n      // const moment = require('moment');\r\n      // const aujourdhui = moment();\r\n      console.log(\"hello\")\r\n      fetch('http://localhost:3000/api/comments/', {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          // 'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n        },\r\n        body: JSON.stringify({\r\n          publicationId: this.publications.id,\r\n          commentaire: this.comment,\r\n          userId: id\r\n        })\r\n      }).then(\r\n        alert(\"votre commentaire a été publié\"))\r\n      location.reload()\r\n      const test = this.publications.id\r\n      console.log(test)\r\n        .catch((error) => {\r\n          console.log(error + \"message d'erreur filler\")\r\n        })\r\n    },\r\n    deletePost() {\r\n      const postId = this.$route.params.id;\r\n      fetch('http://localhost:3000/api/publications/' + postId, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          // 'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n        },\r\n\r\n      });\r\n    },\r\n    showButtons() {\r\n      let newId = sessionStorage.getItem(\"userId\")\r\n      console.log(newId)\r\n\r\n      let postCreator = false\r\n      // idPost = this.publications.user.userId\r\n      let idPost = this.publications.userId\r\n      if (id == idPost) {\r\n        postCreator = true\r\n        console.log(postCreator)\r\n        return postCreator;\r\n\r\n\r\n\r\n\r\n      } else {\r\n        postCreator = false\r\n        console.log(postCreator)\r\n        return postCreator;\r\n\r\n\r\n      }\r\n    }\r\n  },\r\n\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.date {\r\n  margin-left: 25px\r\n}\r\n\r\n.comment {\r\n  margin-bottom: 20px\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"let userId = sessionStorage.getItem(\"userId\");\nconsole.log(userId);\nexport default {\n  name: \"Login-Template\",\n\n  data() {\n    return {\n      dataLogin: {\n        newPwd: \"\",\n        repeatNewPwd: \"\",\n        userId: \"\",\n        avatar: \"\"\n      }\n    };\n  },\n\n  methods: {\n    changePwd() {\n      if (this.repeatNewPwd && this.newPwd == this.repeatNewPwd) {\n        console.log(this.repeatNewPwd);\n        fetch(\"http://localhost:3000/api/users/modify/\" + this.$route.params.id, {\n          method: \"PUT\",\n          body: JSON.stringify({\n            repeatNewPwd: this.repeatNewPwd\n          }),\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\n          }\n        }).then(res.status(200).json({\n          message: \"Publication supprimée\"\n        }));\n      } else {\n        console.log(\"Les mots de passe ne sont pas identiques\");\n        alert(\"Les mots de passe ne sont pas identiques\");\n      }\n    },\n\n    changeAvatar() {\n      let input = document.getElementById('inputFile');\n      const fd = new FormData();\n      fd.append(\"inputFile\", input.files[0]);\n      fetch(\"http://localhost:3000/api/users/modify/avatar/\" + this.$route.params.id, {\n        method: \"PUT\",\n        body: fd,\n        headers: {\n          // 'Accept': 'application/json',\n          // 'Content-Type': 'application/json',\n          'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\n        }\n      }).then(() => {\n        alert(\"avatar modifié\");\n      }).catch(error => error.status(400).json({\n        error\n      }));\n    },\n\n    onFileChange(e) {\n      console.log(e);\n      this.avatar = e.target.files[0] || e.dataTransfer.files;\n      console.log(this.avatar);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA6CA,IAAIA,MAAK,GAAIC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAAb;AAGAC,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAGA,eAAe;EACbK,IAAI,EAAE,gBADO;;EAEbC,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE;QACTC,MAAM,EAAE,EADC;QAETC,YAAY,EAAE,EAFL;QAGTT,MAAM,EAAE,EAHC;QAITU,MAAM,EAAE;MAJC;IADN,CAAP;EAQD,CAXY;;EAYbC,OAAO,EAAE;IACPC,SAAS,GAAG;MACV,IAAI,KAAKH,YAAL,IAAqB,KAAKD,MAAL,IAAe,KAAKC,YAA7C,EAA2D;QACzDN,OAAO,CAACC,GAAR,CAAY,KAAKK,YAAjB;QACAI,KAAK,CAAC,4CAA4C,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,EAAhE,EACH;UACEC,MAAM,EAAE,KADV;UAEEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;YACnBX,YAAY,EAAE,KAAKA;UADA,CAAf,CAFR;UAKEY,OAAO,EAAE;YACP,UAAU,kBADH;YAEP,gBAAgB,kBAFT;YAGP,iBAAiB,YAAYpB,cAAc,CAACC,OAAf,CAAuB,OAAvB;UAHtB;QALX,CADG,CAAL,CAWKoB,IAXL,CAWUC,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;UAAEC,OAAO,EAAE;QAAX,CAArB,CAXV;MAaF,CAfA,MAeO;QACLvB,OAAO,CAACC,GAAR,CAAY,0CAAZ;QACAuB,KAAK,CAAC,0CAAD,CAAL;MACF;IACD,CArBM;;IAsBPC,YAAY,GAAG;MAEb,IAAIC,KAAI,GAAIC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAZ;MACA,MAAMC,EAAC,GAAI,IAAIC,QAAJ,EAAX;MACAD,EAAE,CAACE,MAAH,CAAU,WAAV,EAAuBL,KAAK,CAACM,KAAN,CAAY,CAAZ,CAAvB;MAEAtB,KAAK,CAAC,mDAAmD,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,EAAvE,EACH;QACEC,MAAM,EAAE,KADV;QAEEC,IAAI,EAAEc,EAFR;QAGEX,OAAO,EAAE;UACP;UACA;UACA,iBAAiB,YAAYpB,cAAc,CAACC,OAAf,CAAuB,OAAvB;QAHtB;MAHX,CADG,CAAL,CASKoB,IATL,CASU,MAAM;QACZK,KAAK,CAAC,gBAAD,CAAL;MACD,CAXH,EAWKS,KAXL,CAWYC,KAAD,IAAWA,KAAK,CAACb,MAAN,CAAa,GAAb,EAAkBC,IAAlB,CAAuB;QAAEY;MAAF,CAAvB,CAXtB;IAYD,CAxCM;;IAyCPC,YAAY,CAACC,CAAD,EAAI;MACdpC,OAAO,CAACC,GAAR,CAAYmC,CAAZ;MACA,KAAK7B,MAAL,GAAc6B,CAAC,CAACC,MAAF,CAASL,KAAT,CAAe,CAAf,KAAqBI,CAAC,CAACE,YAAF,CAAeN,KAAlD;MACAhC,OAAO,CAACC,GAAR,CAAY,KAAKM,MAAjB;IAED;;EA9CM;AAZI,CAAf","names":["userId","sessionStorage","getItem","console","log","name","data","dataLogin","newPwd","repeatNewPwd","avatar","methods","changePwd","fetch","$route","params","id","method","body","JSON","stringify","headers","then","res","status","json","message","alert","changeAvatar","input","document","getElementById","fd","FormData","append","files","catch","error","onFileChange","e","target","dataTransfer"],"sourceRoot":"","sources":["D:\\Code\\Projet 7\\p7-groupomania\\P7-Groupomania\\frontend\\src\\components\\UserModifyTemplate.vue"],"sourcesContent":["<template>\r\n\r\n\r\n  <form id=\"new-avatar\" class=\"d-flex flex-column main-form w-50 align-center main-form \" aria-label=\"Modifier-avatar\">\r\n    <h2 class=\"col align-self-center\">Modification de l'avatar</h2>\r\n\r\n\r\n    <div class=\"custom-file\">\r\n      <input type=\"file\" name=\"inputFile\" class=\"custom-file-input\" id=\"inputFile\" aria-describedby=\"inputFileAddon\"\r\n        @change=\"onFileChange\" aria-label=\"choose-avatar\" />\r\n      <label class=\"custom-file-label\" for=\"inputFile\"></label>\r\n    </div>\r\n    <button @click.prevent=\"changeAvatar\" type=\"submit\" class=\"btn btn-primary w-25 col align-self-center\"\r\n      aria-label=\"Modifier-avatar\">Modifier\r\n      avatar</button>\r\n\r\n  </form>\r\n\r\n\r\n  <form id=\"Login-View\">\r\n    <section class=\"d-flex flex-column main-form w-50 align-center main-form\">\r\n      <h2 class=\"col align-self-center\">Modification de mot de passe</h2>\r\n\r\n      <label for=\"newPwd\" class=\"col-md-4 col-form-label text-md-right\">Nouveau mot de passe</label>\r\n      <input v-model=\"newPwd\" class=\"form-control form-control-lg\" type=\"password\" placeholder=\"Nouveau mot de passe\"\r\n        aria-label=\".form-control-lg example\" id=\"newPwd\">\r\n\r\n\r\n      <label for=\"repeatNewPwd\" class=\"col-md-4 col-form-label text-md-right\">Répéter mot de passe</label>\r\n      <input v-model=\"repeatNewPwd\" class=\"form-control form-control-lg\" type=\"password\"\r\n        placeholder=\"Répéter mot de passe\" aria-label=\".form-control-lg example\" id=\"repeatNewPwd\">\r\n\r\n\r\n\r\n      <button @click.prevent=\"changePwd\" type=\"submit\" class=\"btn btn-primary w-25 col align-self-center\">Modifier mot\r\n        de\r\n        passe</button>\r\n    </section>\r\n  </form>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nlet userId = sessionStorage.getItem(\"userId\")\r\n\r\n\r\nconsole.log(userId)\r\n\r\n\r\nexport default {\r\n  name: \"Login-Template\",\r\n  data() {\r\n    return {\r\n      dataLogin: {\r\n        newPwd: \"\",\r\n        repeatNewPwd: \"\",\r\n        userId: \"\",\r\n        avatar: \"\"\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    changePwd() {\r\n      if (this.repeatNewPwd && this.newPwd == this.repeatNewPwd) {\r\n        console.log(this.repeatNewPwd)\r\n        fetch(\"http://localhost:3000/api/users/modify/\" + this.$route.params.id,\r\n          {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({\r\n              repeatNewPwd: this.repeatNewPwd,\r\n            }),\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n            }\r\n          }).then(res.status(200).json({ message: \"Publication supprimée\" }))\r\n\r\n      } else {\r\n        console.log(\"Les mots de passe ne sont pas identiques\")\r\n        alert(\"Les mots de passe ne sont pas identiques\")\r\n      }\r\n    },\r\n    changeAvatar() {\r\n\r\n      let input = document.getElementById('inputFile')\r\n      const fd = new FormData();\r\n      fd.append(\"inputFile\", input.files[0]);\r\n\r\n      fetch(\"http://localhost:3000/api/users/modify/avatar/\" + this.$route.params.id,\r\n        {\r\n          method: \"PUT\",\r\n          body: fd,\r\n          headers: {\r\n            // 'Accept': 'application/json',\r\n            // 'Content-Type': 'application/json',\r\n            'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n          }\r\n        }).then(() => {\r\n          alert(\"avatar modifié\")\r\n        }).catch((error) => error.status(400).json({ error }))\r\n    },\r\n    onFileChange(e) {\r\n      console.log(e);\r\n      this.avatar = e.target.files[0] || e.dataTransfer.files;\r\n      console.log(this.avatar);\r\n\r\n    },\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import HeaderMainPage from \"@/components/HeaderMainPage.vue\"; // import PostSingleTemplate from '@/components/PostSingleTemplate'\n// let id = sessionStorage.getItem(\"userId\")\n// console.log(id)\n\nexport default {\n  components: {\n    HeaderMainPage // PostSingleTemplate\n\n  },\n\n  data() {\n    return {\n      publications: {},\n      // comment: \"\",\n      // image: \"\",\n      // username: \"\",\n      id: sessionStorage.getItem(\"userId\"),\n      admin: sessionStorage.getItem(\"isAdmin\")\n    };\n  },\n\n  created() {\n    const postId = this.$route.params.id;\n    console.log(postId);\n    fetch(`http://localhost:3000/api/publications/` + postId, {\n      method: \"GET\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\n      }\n    }).then(response => response.json()).then(data => {\n      // console.log(data)\n      this.publications = data; // console.log(this.publications)\n    });\n  },\n\n  methods: {\n    SendComment() {\n      // const moment = require('moment');\n      // const aujourdhui = moment();\n      let input = document.getElementById('comment');\n      console.log(input.value);\n      fetch('http://localhost:3000/api/comments/', {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\n        },\n        body: JSON.stringify({\n          publicationId: this.publications.id,\n          commentaire: \"hello\",\n          userId: this.id\n        })\n      }).then(alert(\"votre commentaire a été publié\"));\n      location.reload();\n      const test = this.publications.id;\n      console.log(test).catch(error => {\n        console.log(error + \"message d'erreur filler\");\n      });\n    },\n\n    deletePost() {\n      const postId = this.$route.params.id;\n      fetch('http://localhost:3000/api/publications/' + postId, {\n        method: \"DELETE\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\n        }\n      }).then(() => document.location.href = `http://localhost:8080/publications`);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA+EA,OAAOA,cAAP,MAA2B,iCAA3B,C,CACA;AACA;AACA;;AAKA,eAAe;EACbC,UAAU,EAAE;IACVD,cADU,CAEV;;EAFU,CADC;;EAKbE,IAAI,GAAG;IACL,OAAO;MACLC,YAAY,EAAE,EADT;MAEL;MACA;MACA;MACAC,EAAE,EAAEC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CALC;MAMLC,KAAK,EAAEF,cAAc,CAACC,OAAf,CAAuB,SAAvB;IANF,CAAP;EAQD,CAdY;;EAebE,OAAO,GAAG;IAGR,MAAMC,MAAK,GAAI,KAAKC,MAAL,CAAYC,MAAZ,CAAmBP,EAAlC;IACAQ,OAAO,CAACC,GAAR,CAAYJ,MAAZ;IACAK,KAAK,CAAE,yCAAD,GAA4CL,MAA7C,EAAqD;MACxDM,MAAM,EAAE,KADgD;MAExDC,OAAO,EAAE;QACP,UAAU,kBADH;QAEP,gBAAgB,kBAFT;QAGP,iBAAiB,YAAYX,cAAc,CAACC,OAAf,CAAuB,OAAvB;MAHtB;IAF+C,CAArD,CAAL,CAQGW,IARH,CAQQC,QAAO,IAAKA,QAAQ,CAACC,IAAT,EARpB,EASGF,IATH,CASQf,IAAG,IAAK;MACZ;MACA,KAAKC,YAAL,GAAoBD,IAApB,CAFY,CAGZ;IAID,CAhBH;EAkBD,CAtCY;;EAuCbkB,OAAO,EAAE;IACPC,WAAW,GAAG;MACZ;MACA;MACA,IAAIC,KAAI,GAAIC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAZ;MACAZ,OAAO,CAACC,GAAR,CAAYS,KAAK,CAACG,KAAlB;MACAX,KAAK,CAAC,qCAAD,EAAwC;QAC3CC,MAAM,EAAE,MADmC;QAE3CC,OAAO,EAAE;UACP,UAAU,kBADH;UAEP,gBAAgB,kBAFT;UAGP,iBAAiB,YAAYX,cAAc,CAACC,OAAf,CAAuB,OAAvB;QAHtB,CAFkC;QAO3CoB,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACnBC,aAAa,EAAE,KAAK1B,YAAL,CAAkBC,EADd;UAEnB0B,WAAW,EAAE,OAFM;UAGnBC,MAAM,EAAE,KAAK3B;QAHM,CAAf;MAPqC,CAAxC,CAAL,CAYGa,IAZH,CAaEe,KAAK,CAAC,gCAAD,CAbP;MAcAC,QAAQ,CAACC,MAAT;MACA,MAAMC,IAAG,GAAI,KAAKhC,YAAL,CAAkBC,EAA/B;MACAQ,OAAO,CAACC,GAAR,CAAYsB,IAAZ,EACGC,KADH,CACUC,KAAD,IAAW;QAChBzB,OAAO,CAACC,GAAR,CAAYwB,KAAI,GAAI,yBAApB;MACD,CAHH;IAID,CA1BM;;IA2BPC,UAAU,GAAG;MACX,MAAM7B,MAAK,GAAI,KAAKC,MAAL,CAAYC,MAAZ,CAAmBP,EAAlC;MACAU,KAAK,CAAC,4CAA4CL,MAA7C,EAAqD;QACxDM,MAAM,EAAE,QADgD;QAExDC,OAAO,EAAE;UACP,UAAU,kBADH;UAEP,gBAAgB,kBAFT;UAGP,iBAAiB,YAAYX,cAAc,CAACC,OAAf,CAAuB,OAAvB;QAHtB;MAF+C,CAArD,CAAL,CASGW,IATH,CASQ,MACJM,QAAQ,CAACU,QAAT,CAAkBM,IAAlB,GAA0B,oCAV9B;IAaD;;EA1CM;AAvCI,CAAf","names":["HeaderMainPage","components","data","publications","id","sessionStorage","getItem","admin","created","postId","$route","params","console","log","fetch","method","headers","then","response","json","methods","SendComment","input","document","getElementById","value","body","JSON","stringify","publicationId","commentaire","userId","alert","location","reload","test","catch","error","deletePost","href"],"sourceRoot":"","sources":["D:\\Code\\Projet 7\\p7-groupomania\\P7-Groupomania\\frontend\\src\\components\\PostSingleTemplate.vue"],"sourcesContent":["<template>\r\n  <HeaderMainPage />\r\n  <div class=\"Publications-View\" id=\"Publications-View\">\r\n    <div class=\"container\">\r\n      <div class=\"well \">\r\n        <div class=\"media\">\r\n          <div class=\"media-body\">\r\n            <h4 class=\"media-heading\"></h4>\r\n            <p class=\"text-right fw-bold fs-3\"> {{ publications.title }}</p>\r\n            <div class=\"card-img-top w-50 mx-auto\" v-if=\"publications.image\">\r\n              <img :src=\"publications.image\" alt=\"image publication\" class=\"w-100\" />\r\n            </div>\r\n            <p>{{ content }}</p>\r\n            <ul class=\"list-inline list-unstyled main-post\">\r\n              <li><span><i class=\"glyphicon glyphicon-calendar\"></i> </span></li>\r\n              <p>Publié par <router-link :to=\"{ name: 'SingleUser', params: { id: publications.userId } }\">{{\r\n                  publications.user.username\r\n              }}\r\n                  {{ publications.userId }}\r\n                </router-link> le {{ new\r\n                    Date(createdAt).toLocaleString(\"fr-FR\", { timeZone: \"UTC\" })\r\n                }}</p>\r\n\r\n            </ul>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"modify container\">\r\n    <router-link :to=\"{ name: 'Modify', params: { id: this.$route.params.id } }\">\r\n\r\n      <button v-if=\"id == this.publications.userId || admin == `true`\" class=\" btn btn-warning btn-sm\">Modifier\r\n        publication</button>\r\n    </router-link>\r\n\r\n    <button v-if=\"id == this.publications.userId || admin == `true`\" @click=\"deletePost\"\r\n      class=\"btn btn-danger btn-sm\">Supprimer\r\n      publication</button>\r\n\r\n  </div>\r\n\r\n\r\n  <div class=\"well container\">\r\n    <h4><i class=\"fa fa-paper-plane-o\"></i> Leave a Comment:</h4>\r\n    <form role=\"form\">\r\n      <div class=\"form-group\">\r\n        <textarea v-model=\"comment\" class=\"form-control\" rows=\"3\"></textarea>\r\n      </div>\r\n      <button v-on:click.prevent=\"SendComment\" type=\"submit\" value=\"\" class=\"btn btn-primary btn-sm\"><i\r\n          class=\"fa fa-reply\" id=\"comment\"></i>\r\n        Envoyer commentaire</button>\r\n    </form>\r\n  </div>\r\n  <div v-for=\"x in comments\" :key=\"x\" class=\"container\">\r\n    <h5><i class=\"commentaire\"></i>Commentaire de <router-link\r\n        :to=\"{ name: 'SingleUser', params: { id: publications.userId } }\">{{\r\n            publications.user.username\r\n        }} </router-link>\r\n      <small>{{ new Date(x.createdAt).toLocaleString(\"fr-FR\", { timeZone: \"UTC\" })\r\n      }}</small>\r\n    </h5>\r\n    <p>{{ publications.commentaire }}</p>\r\n    <router-link :to=\"{ name: 'ModifyComment', params: { id: publications.id } }\">\r\n      <button v-if=\"id == publications.userId || admin == `true`\" class=\"btn btn-warning btn-sm\"> Modifier commentaire\r\n      </button>\r\n    </router-link>\r\n  </div>\r\n\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport HeaderMainPage from \"@/components/HeaderMainPage.vue\"\r\n// import PostSingleTemplate from '@/components/PostSingleTemplate'\r\n// let id = sessionStorage.getItem(\"userId\")\r\n// console.log(id)\r\n\r\n\r\n\r\n\r\nexport default {\r\n  components: {\r\n    HeaderMainPage,\r\n    // PostSingleTemplate\r\n  },\r\n  data() {\r\n    return {\r\n      publications: {},\r\n      // comment: \"\",\r\n      // image: \"\",\r\n      // username: \"\",\r\n      id: sessionStorage.getItem(\"userId\"),\r\n      admin: sessionStorage.getItem(\"isAdmin\")\r\n    }\r\n  },\r\n  created() {\r\n\r\n\r\n    const postId = this.$route.params.id;\r\n    console.log(postId);\r\n    fetch(`http://localhost:3000/api/publications/` + postId, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n      },\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // console.log(data)\r\n        this.publications = data\r\n        // console.log(this.publications)\r\n\r\n\r\n\r\n      })\r\n\r\n  },\r\n  methods: {\r\n    SendComment() {\r\n      // const moment = require('moment');\r\n      // const aujourdhui = moment();\r\n      let input = document.getElementById('comment')\r\n      console.log(input.value)\r\n      fetch('http://localhost:3000/api/comments/', {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n        },\r\n        body: JSON.stringify({\r\n          publicationId: this.publications.id,\r\n          commentaire: \"hello\",\r\n          userId: this.id\r\n        })\r\n      }).then(\r\n        alert(\"votre commentaire a été publié\"))\r\n      location.reload()\r\n      const test = this.publications.id\r\n      console.log(test)\r\n        .catch((error) => {\r\n          console.log(error + \"message d'erreur filler\")\r\n        })\r\n    },\r\n    deletePost() {\r\n      const postId = this.$route.params.id;\r\n      fetch('http://localhost:3000/api/publications/' + postId, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': \"Bearer \" + sessionStorage.getItem(\"Token\")\r\n        },\r\n\r\n      })\r\n        .then(() =>\r\n          document.location.href = `http://localhost:8080/publications`)\r\n\r\n\r\n    },\r\n\r\n  },\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.date {\r\n  margin-left: 25px\r\n}\r\n\r\n.comment {\r\n  margin-bottom: 20px\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}